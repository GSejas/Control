ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global _printf_float
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 25346C64 		.ascii	"%4ld mV \012\000"
  22      206D5620 
  22      0A00
  23              		.thumb
  24 000a 0000     		.section	.text.main,"ax",%progbits
  25              		.align	2
  26              		.global	main
  27              		.thumb
  28              		.thumb_func
  29              		.type	main, %function
  30              	main:
  31              	.LFB56:
  32              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.0
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** *  This is source code for example project of the 4ch dual SAR with SPI Master
   8:.\main.c      **** *  and USBUART.
   9:.\main.c      **** *
  10:.\main.c      **** * Parameters used:
  11:.\main.c      **** *  SPI Master
  12:.\main.c      **** *   Mode                0(CPHA ==0, CPOL ==0)
  13:.\main.c      **** *   Data lines          MOSI+MISO
  14:.\main.c      **** *   Shift direction     MSB First
  15:.\main.c      **** *   DataBits            16
  16:.\main.c      **** *   Bit Rate            1Mbit/s
  17:.\main.c      **** *   Clock source        External
  18:.\main.c      **** *
  19:.\main.c      **** *  USBFS
  20:.\main.c      **** *    Configured as a CDC device (see datasheet and USBUART example project)
  21:.\main.c      **** *    Note that for USB operation, a 24MHz crystal needs to be installed on
  22:.\main.c      **** *    processor module for CY8CKIT-001.
  23:.\main.c      **** *
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 2


  24:.\main.c      **** *  SAR ADCs
  25:.\main.c      **** *      Sample mode             Triggered
  26:.\main.c      **** *     Clock source         Internal
  27:.\main.c      **** *    Resolution            12 bits
  28:.\main.c      **** *    Conversion Rate        100000 SPS
  29:.\main.c      **** *    Input range            +/- Vdda (Differential)
  30:.\main.c      **** *    Reference            Internal Vref bypassed
  31:.\main.c      **** *    Bypass Capacitors    10uF each
  32:.\main.c      **** *
  33:.\main.c      **** *  IDAC
  34:.\main.c      **** *    Polarity            Positive
  35:.\main.c      **** *    Range                0-31.875 uA
  36:.\main.c      **** *    Speed                Slow
  37:.\main.c      **** *    Value                10uA
  38:.\main.c      **** *
  39:.\main.c      **** *  Analog Mux
  40:.\main.c      **** *    Mux type            Differential
  41:.\main.c      **** *    Channels            4
  42:.\main.c      **** *
  43:.\main.c      **** *  Clocking
  44:.\main.c      **** *    IMO source            24 MHz Xtal
  45:.\main.c      **** *    USB                    48 MHz (IMO*2)
  46:.\main.c      **** *    ILO                    100 kHz
  47:.\main.c      **** *
  48:.\main.c      **** * In this project, data input to two 4ch SAR ADCs via two 4ch analog muxes
  49:.\main.c      **** * is converted and sent to a USB host device and a SPI slave device. To
  50:.\main.c      **** * accomplish this, the central PSoC device implements a SPI Master and USB UART
  51:.\main.c      **** * for communication. The USB host device can select which channel of the mux is
  52:.\main.c      **** * to be read.
  53:.\main.c      **** *
  54:.\main.c      **** * To access the PSoC using the USBUART follow these steps:
  55:.\main.c      **** *    1. Connect CY8CKIT-001 to the PC using USB cable.
  56:.\main.c      **** *    2. Select the USB_UART.inf file from the project directory, as the driver
  57:.\main.c      **** *      for this example once Windows asks for it.
  58:.\main.c      **** *    3. Go to Start > Devices and Printers and identify COM port number
  59:.\main.c      **** *       associated with the project.
  60:.\main.c      **** *    4. Open a terminal emulation software and connect to COM port number
  61:.\main.c      **** *       identified in previous step.
  62:.\main.c      **** *    5. The input window will open with a blank screen. Type in a channel value.
  63:.\main.c      **** *
  64:.\main.c      **** ********************************************************************************
  65:.\main.c      **** * Copyright 2012, Cypress Semiconductor Corporation. All rights reserved.
  66:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation and is protected
  67:.\main.c      **** * by and subject to worldwide patent and copyright laws and treaties.
  68:.\main.c      **** * Therefore, you may use this software only as provided in the license agreement
  69:.\main.c      **** * accompanying the software package from which you obtained this software.
  70:.\main.c      **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  71:.\main.c      **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  72:.\main.c      **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  73:.\main.c      **** *******************************************************************************/
  74:.\main.c      **** 
  75:.\main.c      **** #include <device.h>
  76:.\main.c      **** #include <stdio.h>
  77:.\main.c      **** 
  78:.\main.c      **** #if defined (__GNUC__)
  79:.\main.c      ****     /* Add an explicit reference to the floating point printf library */
  80:.\main.c      ****     /* to allow the usage of floating point conversion specifiers. */
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 3


  81:.\main.c      ****     /* This is not linked in by default with the newlib-nano library. */
  82:.\main.c      ****     asm (".global _printf_float");
  83:.\main.c      **** #endif
  84:.\main.c      **** 
  85:.\main.c      **** 
  86:.\main.c      **** #define RD_BUFFER_LEN           (64u)
  87:.\main.c      **** #define WR_BUFFER_LEN           (64u)
  88:.\main.c      **** #define MUX_SIZE                (4u)
  89:.\main.c      **** #define MAX_SAMPLE 				  8
  90:.\main.c      **** 
  91:.\main.c      **** /* Function that encapsulates the process of writing text strings to USBUART */
  92:.\main.c      **** void PrintToUSBUART(char8 * outText);
  93:.\main.c      **** 
  94:.\main.c      **** 
  95:.\main.c      **** /*******************************************************************************
  96:.\main.c      **** * Function Name: main
  97:.\main.c      **** ********************************************************************************
  98:.\main.c      **** *
  99:.\main.c      **** * Summary:
 100:.\main.c      **** *  main() performs following functions:
 101:.\main.c      **** *   1.Reads ADC value continuosly
 102:.\main.c      **** *   2. Sends it over USBUART
 103:.\main.c      **** *
 104:.\main.c      **** * Parameters:
 105:.\main.c      **** *  None.
 106:.\main.c      **** *
 107:.\main.c      **** * Return:
 108:.\main.c      **** *  None.
 109:.\main.c      **** *
 110:.\main.c      **** *******************************************************************************/
 111:.\main.c      **** void main()
 112:.\main.c      **** {
  33              		.loc 1 112 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 88
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 96B0     		sub	sp, sp, #88
  42              		.cfi_def_cfa_offset 96
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
 113:.\main.c      ****     /* adcReading holds the converted 16-bit data from the ADC */
 114:.\main.c      ****     uint16 adcReading = 0u;
  45              		.loc 1 114 0
  46 0006 0023     		movs	r3, #0
  47 0008 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 115:.\main.c      ****     uint8 wrBuffer[WR_BUFFER_LEN];
 116:.\main.c      **** 
 117:.\main.c      ****     /* Enable Global interrupts - used for USB communication */
 118:.\main.c      ****     int32 voltSamples = 0;
  48              		.loc 1 118 0
  49 000c 0023     		movs	r3, #0
  50 000e 7B65     		str	r3, [r7, #84]
 119:.\main.c      **** 	uint8 sampleCount=0;
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 4


  51              		.loc 1 119 0
  52 0010 0023     		movs	r3, #0
  53 0012 87F85330 		strb	r3, [r7, #83]
 120:.\main.c      **** 	int32 mVolts=0; 
  54              		.loc 1 120 0
  55 0016 0023     		movs	r3, #0
  56 0018 7B64     		str	r3, [r7, #68]
 121:.\main.c      **** 	int32 averageVolts=0;
  57              		.loc 1 121 0
  58 001a 0023     		movs	r3, #0
  59 001c 3B64     		str	r3, [r7, #64]
 122:.\main.c      ****     
 123:.\main.c      **** 	CyGlobalIntEnable;
  60              		.loc 1 123 0
  61              	@ 123 ".\main.c" 1
  62 001e 62B6     		CPSIE   i
  63              	@ 0 "" 2
 124:.\main.c      **** 
 125:.\main.c      ****     
 126:.\main.c      ****     USBUART_1_Start(0u, USBUART_1_5V_OPERATION);
  64              		.loc 1 126 0
  65              		.thumb
  66 0020 0020     		movs	r0, #0
  67 0022 0121     		movs	r1, #1
  68 0024 FFF7FEFF 		bl	USBUART_1_Start
 127:.\main.c      ****     LCD_Start();
  69              		.loc 1 127 0
  70 0028 FFF7FEFF 		bl	LCD_Start
 128:.\main.c      ****     
 129:.\main.c      ****     ADC_SAR_0_Start();
  71              		.loc 1 129 0
  72 002c FFF7FEFF 		bl	ADC_SAR_0_Start
 130:.\main.c      **** 	ADC_SAR_0_StartConvert();
  73              		.loc 1 130 0
  74 0030 FFF7FEFF 		bl	ADC_SAR_0_StartConvert
 131:.\main.c      ****     /* Wait for Device to enumerate */
 132:.\main.c      ****     while(!USBUART_1_GetConfiguration());
  75              		.loc 1 132 0
  76 0034 00BF     		nop
  77              	.L2:
  78              		.loc 1 132 0 is_stmt 0 discriminator 1
  79 0036 FFF7FEFF 		bl	USBUART_1_GetConfiguration
  80 003a 0346     		mov	r3, r0
  81 003c 002B     		cmp	r3, #0
  82 003e FAD0     		beq	.L2
 133:.\main.c      **** 
 134:.\main.c      ****     /* Enumeration is complete, enable OUT endpoint for received data from Host */
 135:.\main.c      ****     USBUART_1_CDC_Init();
  83              		.loc 1 135 0 is_stmt 1
  84 0040 FFF7FEFF 		bl	USBUART_1_CDC_Init
  85              	.L6:
 136:.\main.c      **** 
 137:.\main.c      ****     for(;;)
 138:.\main.c      ****     {	
 139:.\main.c      **** 				
 140:.\main.c      ****                 
 141:.\main.c      ****         ADC_SAR_0_IsEndConversion(ADC_SAR_0_WAIT_FOR_RESULT);
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 5


  86              		.loc 1 141 0
  87 0044 0020     		movs	r0, #0
  88 0046 FFF7FEFF 		bl	ADC_SAR_0_IsEndConversion
 142:.\main.c      ****         adcReading = ADC_SAR_0_GetResult16();
  89              		.loc 1 142 0
  90 004a FFF7FEFF 		bl	ADC_SAR_0_GetResult16
  91 004e 0346     		mov	r3, r0
  92 0050 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 143:.\main.c      **** 		mVolts = ADC_SAR_0_CountsTo_mVolts(adcReading);
  93              		.loc 1 143 0
  94 0054 B7F84A30 		ldrh	r3, [r7, #74]
  95 0058 1BB2     		sxth	r3, r3
  96 005a 1846     		mov	r0, r3
  97 005c FFF7FEFF 		bl	ADC_SAR_0_CountsTo_mVolts
  98 0060 0346     		mov	r3, r0
  99 0062 7B64     		str	r3, [r7, #68]
 144:.\main.c      **** 		voltSamples = voltSamples + mVolts;
 100              		.loc 1 144 0
 101 0064 7A6D     		ldr	r2, [r7, #84]
 102 0066 7B6C     		ldr	r3, [r7, #68]
 103 0068 1344     		add	r3, r3, r2
 104 006a 7B65     		str	r3, [r7, #84]
 145:.\main.c      **** 		sampleCount++;
 105              		.loc 1 145 0
 106 006c 97F85330 		ldrb	r3, [r7, #83]	@ zero_extendqisi2
 107 0070 0133     		adds	r3, r3, #1
 108 0072 87F85330 		strb	r3, [r7, #83]
 146:.\main.c      **** 
 147:.\main.c      **** 		if(sampleCount == MAX_SAMPLE)
 109              		.loc 1 147 0
 110 0076 97F85330 		ldrb	r3, [r7, #83]	@ zero_extendqisi2
 111 007a 082B     		cmp	r3, #8
 112 007c 26D1     		bne	.L3
 113              	.LBB2:
 148:.\main.c      **** 			{
 149:.\main.c      **** 				int u;
 150:.\main.c      ****                 for(u=0; u<100000;u++){}
 114              		.loc 1 150 0
 115 007e 0023     		movs	r3, #0
 116 0080 FB64     		str	r3, [r7, #76]
 117 0082 02E0     		b	.L4
 118              	.L5:
 119              		.loc 1 150 0 is_stmt 0 discriminator 3
 120 0084 FB6C     		ldr	r3, [r7, #76]
 121 0086 0133     		adds	r3, r3, #1
 122 0088 FB64     		str	r3, [r7, #76]
 123              	.L4:
 124              		.loc 1 150 0 discriminator 1
 125 008a FB6C     		ldr	r3, [r7, #76]
 126 008c 104A     		ldr	r2, .L7
 127 008e 9342     		cmp	r3, r2
 128 0090 F8DD     		ble	.L5
 151:.\main.c      ****                 averageVolts = voltSamples >> 3;
 129              		.loc 1 151 0 is_stmt 1
 130 0092 7B6D     		ldr	r3, [r7, #84]
 131 0094 DB10     		asrs	r3, r3, #3
 132 0096 3B64     		str	r3, [r7, #64]
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 6


 152:.\main.c      **** 				voltSamples = 0;
 133              		.loc 1 152 0
 134 0098 0023     		movs	r3, #0
 135 009a 7B65     		str	r3, [r7, #84]
 153:.\main.c      **** 				sampleCount = 0;
 136              		.loc 1 153 0
 137 009c 0023     		movs	r3, #0
 138 009e 87F85330 		strb	r3, [r7, #83]
 154:.\main.c      **** 
 155:.\main.c      **** 				/* Convert milli volts to string and display on the LCD. sprintf()
 156:.\main.c      **** 				*  function is standard library function defined in the stdio.h 
 157:.\main.c      **** 				*  header file */ 
 158:.\main.c      **** 				sprintf((char *)wrBuffer, "%4ld mV \n",averageVolts);
 139              		.loc 1 158 0
 140 00a2 3B46     		mov	r3, r7
 141 00a4 1846     		mov	r0, r3
 142 00a6 0B49     		ldr	r1, .L7+4
 143 00a8 3A6C     		ldr	r2, [r7, #64]
 144 00aa FFF7FEFF 		bl	sprintf
 159:.\main.c      **** 				LCD_ClearDisplay();
 145              		.loc 1 159 0
 146 00ae 0120     		movs	r0, #1
 147 00b0 FFF7FEFF 		bl	LCD_WriteControl
 160:.\main.c      ****                 LCD_Position(1,0);
 148              		.loc 1 160 0
 149 00b4 0120     		movs	r0, #1
 150 00b6 0021     		movs	r1, #0
 151 00b8 FFF7FEFF 		bl	LCD_Position
 161:.\main.c      **** 				LCD_PrintString((char8 *)wrBuffer);
 152              		.loc 1 161 0
 153 00bc 3B46     		mov	r3, r7
 154 00be 1846     		mov	r0, r3
 155 00c0 FFF7FEFF 		bl	LCD_PrintString
 162:.\main.c      **** 				PrintToUSBUART((char8 *)wrBuffer);
 156              		.loc 1 162 0
 157 00c4 3B46     		mov	r3, r7
 158 00c6 1846     		mov	r0, r3
 159 00c8 FFF7FEFF 		bl	PrintToUSBUART
 160              	.L3:
 161              	.LBE2:
 163:.\main.c      **** 			}  
 164:.\main.c      ****     }  /* End of forever loop */
 162              		.loc 1 164 0
 163 00cc BAE7     		b	.L6
 164              	.L8:
 165 00ce 00BF     		.align	2
 166              	.L7:
 167 00d0 9F860100 		.word	99999
 168 00d4 00000000 		.word	.LC0
 169              		.cfi_endproc
 170              	.LFE56:
 171              		.size	main, .-main
 172              		.section	.text.PrintToUSBUART,"ax",%progbits
 173              		.align	2
 174              		.global	PrintToUSBUART
 175              		.thumb
 176              		.thumb_func
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 7


 177              		.type	PrintToUSBUART, %function
 178              	PrintToUSBUART:
 179              	.LFB57:
 165:.\main.c      **** }  /* End of main */
 166:.\main.c      **** 
 167:.\main.c      **** 
 168:.\main.c      **** /*******************************************************************************
 169:.\main.c      **** * Function Name: PrintToUSBUART
 170:.\main.c      **** ********************************************************************************
 171:.\main.c      **** *
 172:.\main.c      **** * Summary:
 173:.\main.c      **** *  The input string passed to the function is printed to the USBUART
 174:.\main.c      **** *  interface when the CDC device is ready.
 175:.\main.c      **** *
 176:.\main.c      **** * Parameters:
 177:.\main.c      **** *  Text to be printed to USBUART as a string.
 178:.\main.c      **** *
 179:.\main.c      **** * Return:
 180:.\main.c      **** *  None.
 181:.\main.c      **** *
 182:.\main.c      **** *******************************************************************************/
 183:.\main.c      **** 
 184:.\main.c      **** void PrintToUSBUART(char8 * outText)
 185:.\main.c      **** {
 180              		.loc 1 185 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
 189              		.cfi_def_cfa_offset 16
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 186:.\main.c      ****     /* Wait till the CDC device is ready before sending data */
 187:.\main.c      ****     while(USBUART_1_CDCIsReady() == 0u);
 193              		.loc 1 187 0
 194 0008 00BF     		nop
 195              	.L10:
 196              		.loc 1 187 0 is_stmt 0 discriminator 1
 197 000a FFF7FEFF 		bl	USBUART_1_CDCIsReady
 198 000e 0346     		mov	r3, r0
 199 0010 002B     		cmp	r3, #0
 200 0012 FAD0     		beq	.L10
 188:.\main.c      ****     /* Send strlen number of characters of wrBuffer to USBUART */
 189:.\main.c      ****     USBUART_1_PutData((uint8 *)outText, strlen(outText));
 201              		.loc 1 189 0 is_stmt 1
 202 0014 7868     		ldr	r0, [r7, #4]
 203 0016 FFF7FEFF 		bl	strlen
 204 001a 0346     		mov	r3, r0
 205 001c 9BB2     		uxth	r3, r3
 206 001e 7868     		ldr	r0, [r7, #4]
 207 0020 1946     		mov	r1, r3
 208 0022 FFF7FEFF 		bl	USBUART_1_PutData
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 8


 190:.\main.c      **** }
 209              		.loc 1 190 0
 210 0026 0837     		adds	r7, r7, #8
 211              		.cfi_def_cfa_offset 8
 212 0028 BD46     		mov	sp, r7
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 002a 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE57:
 218              		.size	PrintToUSBUART, .-PrintToUSBUART
 219              		.text
 220              	.Letext0:
 221              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 222              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 223              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 224              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 225              		.section	.debug_info,"",%progbits
 226              	.Ldebug_info0:
 227 0000 92010000 		.4byte	0x192
 228 0004 0400     		.2byte	0x4
 229 0006 00000000 		.4byte	.Ldebug_abbrev0
 230 000a 04       		.byte	0x4
 231 000b 01       		.uleb128 0x1
 232 000c 17000000 		.4byte	.LASF25
 233 0010 01       		.byte	0x1
 234 0011 B5000000 		.4byte	.LASF26
 235 0015 FC000000 		.4byte	.LASF27
 236 0019 00000000 		.4byte	.Ldebug_ranges0+0
 237 001d 00000000 		.4byte	0
 238 0021 00000000 		.4byte	.Ldebug_line0
 239 0025 02       		.uleb128 0x2
 240 0026 01       		.byte	0x1
 241 0027 06       		.byte	0x6
 242 0028 D4010000 		.4byte	.LASF0
 243 002c 02       		.uleb128 0x2
 244 002d 01       		.byte	0x1
 245 002e 08       		.byte	0x8
 246 002f C4000000 		.4byte	.LASF1
 247 0033 02       		.uleb128 0x2
 248 0034 02       		.byte	0x2
 249 0035 05       		.byte	0x5
 250 0036 BB010000 		.4byte	.LASF2
 251 003a 02       		.uleb128 0x2
 252 003b 02       		.byte	0x2
 253 003c 07       		.byte	0x7
 254 003d E0010000 		.4byte	.LASF3
 255 0041 03       		.uleb128 0x3
 256 0042 00000000 		.4byte	.LASF9
 257 0046 02       		.byte	0x2
 258 0047 3F       		.byte	0x3f
 259 0048 4C000000 		.4byte	0x4c
 260 004c 02       		.uleb128 0x2
 261 004d 04       		.byte	0x4
 262 004e 05       		.byte	0x5
 263 004f CB010000 		.4byte	.LASF4
 264 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 9


 265 0054 04       		.byte	0x4
 266 0055 07       		.byte	0x7
 267 0056 E4000000 		.4byte	.LASF5
 268 005a 02       		.uleb128 0x2
 269 005b 08       		.byte	0x8
 270 005c 05       		.byte	0x5
 271 005d 8D010000 		.4byte	.LASF6
 272 0061 02       		.uleb128 0x2
 273 0062 08       		.byte	0x8
 274 0063 07       		.byte	0x7
 275 0064 5D010000 		.4byte	.LASF7
 276 0068 04       		.uleb128 0x4
 277 0069 04       		.byte	0x4
 278 006a 05       		.byte	0x5
 279 006b 696E7400 		.ascii	"int\000"
 280 006f 02       		.uleb128 0x2
 281 0070 04       		.byte	0x4
 282 0071 07       		.byte	0x7
 283 0072 50010000 		.4byte	.LASF8
 284 0076 03       		.uleb128 0x3
 285 0077 AD000000 		.4byte	.LASF10
 286 007b 03       		.byte	0x3
 287 007c 2C       		.byte	0x2c
 288 007d 41000000 		.4byte	0x41
 289 0081 03       		.uleb128 0x3
 290 0082 C5010000 		.4byte	.LASF11
 291 0086 04       		.byte	0x4
 292 0087 5B       		.byte	0x5b
 293 0088 2C000000 		.4byte	0x2c
 294 008c 03       		.uleb128 0x3
 295 008d 3E010000 		.4byte	.LASF12
 296 0091 04       		.byte	0x4
 297 0092 5C       		.byte	0x5c
 298 0093 3A000000 		.4byte	0x3a
 299 0097 03       		.uleb128 0x3
 300 0098 F6000000 		.4byte	.LASF13
 301 009c 04       		.byte	0x4
 302 009d 60       		.byte	0x60
 303 009e 4C000000 		.4byte	0x4c
 304 00a2 02       		.uleb128 0x2
 305 00a3 04       		.byte	0x4
 306 00a4 04       		.byte	0x4
 307 00a5 BE000000 		.4byte	.LASF14
 308 00a9 02       		.uleb128 0x2
 309 00aa 08       		.byte	0x8
 310 00ab 04       		.byte	0x4
 311 00ac 32010000 		.4byte	.LASF15
 312 00b0 03       		.uleb128 0x3
 313 00b1 DE000000 		.4byte	.LASF16
 314 00b5 04       		.byte	0x4
 315 00b6 6C       		.byte	0x6c
 316 00b7 BB000000 		.4byte	0xbb
 317 00bb 02       		.uleb128 0x2
 318 00bc 01       		.byte	0x1
 319 00bd 08       		.byte	0x8
 320 00be B6010000 		.4byte	.LASF17
 321 00c2 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 10


 322 00c3 04       		.byte	0x4
 323 00c4 07       		.byte	0x7
 324 00c5 84010000 		.4byte	.LASF18
 325 00c9 05       		.uleb128 0x5
 326 00ca 39010000 		.4byte	.LASF28
 327 00ce 01       		.byte	0x1
 328 00cf 6F       		.byte	0x6f
 329 00d0 00000000 		.4byte	.LFB56
 330 00d4 D8000000 		.4byte	.LFE56-.LFB56
 331 00d8 01       		.uleb128 0x1
 332 00d9 9C       		.byte	0x9c
 333 00da 4A010000 		.4byte	0x14a
 334 00de 06       		.uleb128 0x6
 335 00df 45010000 		.4byte	.LASF19
 336 00e3 01       		.byte	0x1
 337 00e4 72       		.byte	0x72
 338 00e5 8C000000 		.4byte	0x8c
 339 00e9 02       		.uleb128 0x2
 340 00ea 91       		.byte	0x91
 341 00eb 6A       		.sleb128 -22
 342 00ec 06       		.uleb128 0x6
 343 00ed 74010000 		.4byte	.LASF20
 344 00f1 01       		.byte	0x1
 345 00f2 73       		.byte	0x73
 346 00f3 4A010000 		.4byte	0x14a
 347 00f7 03       		.uleb128 0x3
 348 00f8 91       		.byte	0x91
 349 00f9 A07F     		.sleb128 -96
 350 00fb 06       		.uleb128 0x6
 351 00fc AA010000 		.4byte	.LASF21
 352 0100 01       		.byte	0x1
 353 0101 76       		.byte	0x76
 354 0102 97000000 		.4byte	0x97
 355 0106 02       		.uleb128 0x2
 356 0107 91       		.byte	0x91
 357 0108 74       		.sleb128 -12
 358 0109 06       		.uleb128 0x6
 359 010a D2000000 		.4byte	.LASF22
 360 010e 01       		.byte	0x1
 361 010f 77       		.byte	0x77
 362 0110 81000000 		.4byte	0x81
 363 0114 02       		.uleb128 0x2
 364 0115 91       		.byte	0x91
 365 0116 73       		.sleb128 -13
 366 0117 06       		.uleb128 0x6
 367 0118 7D010000 		.4byte	.LASF23
 368 011c 01       		.byte	0x1
 369 011d 78       		.byte	0x78
 370 011e 97000000 		.4byte	0x97
 371 0122 02       		.uleb128 0x2
 372 0123 91       		.byte	0x91
 373 0124 64       		.sleb128 -28
 374 0125 06       		.uleb128 0x6
 375 0126 0A000000 		.4byte	.LASF24
 376 012a 01       		.byte	0x1
 377 012b 79       		.byte	0x79
 378 012c 97000000 		.4byte	0x97
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 11


 379 0130 02       		.uleb128 0x2
 380 0131 91       		.byte	0x91
 381 0132 60       		.sleb128 -32
 382 0133 07       		.uleb128 0x7
 383 0134 7E000000 		.4byte	.LBB2
 384 0138 4E000000 		.4byte	.LBE2-.LBB2
 385 013c 08       		.uleb128 0x8
 386 013d 7500     		.ascii	"u\000"
 387 013f 01       		.byte	0x1
 388 0140 95       		.byte	0x95
 389 0141 68000000 		.4byte	0x68
 390 0145 02       		.uleb128 0x2
 391 0146 91       		.byte	0x91
 392 0147 6C       		.sleb128 -20
 393 0148 00       		.byte	0
 394 0149 00       		.byte	0
 395 014a 09       		.uleb128 0x9
 396 014b 81000000 		.4byte	0x81
 397 014f 5A010000 		.4byte	0x15a
 398 0153 0A       		.uleb128 0xa
 399 0154 C2000000 		.4byte	0xc2
 400 0158 3F       		.byte	0x3f
 401 0159 00       		.byte	0
 402 015a 0B       		.uleb128 0xb
 403 015b 9B010000 		.4byte	.LASF29
 404 015f 01       		.byte	0x1
 405 0160 B8       		.byte	0xb8
 406 0161 00000000 		.4byte	.LFB57
 407 0165 2C000000 		.4byte	.LFE57-.LFB57
 408 0169 01       		.uleb128 0x1
 409 016a 9C       		.byte	0x9c
 410 016b 7E010000 		.4byte	0x17e
 411 016f 0C       		.uleb128 0xc
 412 0170 A5000000 		.4byte	.LASF30
 413 0174 01       		.byte	0x1
 414 0175 B8       		.byte	0xb8
 415 0176 7E010000 		.4byte	0x17e
 416 017a 02       		.uleb128 0x2
 417 017b 91       		.byte	0x91
 418 017c 74       		.sleb128 -12
 419 017d 00       		.byte	0
 420 017e 0D       		.uleb128 0xd
 421 017f 04       		.byte	0x4
 422 0180 B0000000 		.4byte	0xb0
 423 0184 0E       		.uleb128 0xe
 424 0185 25010000 		.4byte	.LASF31
 425 0189 05       		.byte	0x5
 426 018a 1606     		.2byte	0x616
 427 018c 90010000 		.4byte	0x190
 428 0190 0F       		.uleb128 0xf
 429 0191 76000000 		.4byte	0x76
 430 0195 00       		.byte	0
 431              		.section	.debug_abbrev,"",%progbits
 432              	.Ldebug_abbrev0:
 433 0000 01       		.uleb128 0x1
 434 0001 11       		.uleb128 0x11
 435 0002 01       		.byte	0x1
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 12


 436 0003 25       		.uleb128 0x25
 437 0004 0E       		.uleb128 0xe
 438 0005 13       		.uleb128 0x13
 439 0006 0B       		.uleb128 0xb
 440 0007 03       		.uleb128 0x3
 441 0008 0E       		.uleb128 0xe
 442 0009 1B       		.uleb128 0x1b
 443 000a 0E       		.uleb128 0xe
 444 000b 55       		.uleb128 0x55
 445 000c 17       		.uleb128 0x17
 446 000d 11       		.uleb128 0x11
 447 000e 01       		.uleb128 0x1
 448 000f 10       		.uleb128 0x10
 449 0010 17       		.uleb128 0x17
 450 0011 00       		.byte	0
 451 0012 00       		.byte	0
 452 0013 02       		.uleb128 0x2
 453 0014 24       		.uleb128 0x24
 454 0015 00       		.byte	0
 455 0016 0B       		.uleb128 0xb
 456 0017 0B       		.uleb128 0xb
 457 0018 3E       		.uleb128 0x3e
 458 0019 0B       		.uleb128 0xb
 459 001a 03       		.uleb128 0x3
 460 001b 0E       		.uleb128 0xe
 461 001c 00       		.byte	0
 462 001d 00       		.byte	0
 463 001e 03       		.uleb128 0x3
 464 001f 16       		.uleb128 0x16
 465 0020 00       		.byte	0
 466 0021 03       		.uleb128 0x3
 467 0022 0E       		.uleb128 0xe
 468 0023 3A       		.uleb128 0x3a
 469 0024 0B       		.uleb128 0xb
 470 0025 3B       		.uleb128 0x3b
 471 0026 0B       		.uleb128 0xb
 472 0027 49       		.uleb128 0x49
 473 0028 13       		.uleb128 0x13
 474 0029 00       		.byte	0
 475 002a 00       		.byte	0
 476 002b 04       		.uleb128 0x4
 477 002c 24       		.uleb128 0x24
 478 002d 00       		.byte	0
 479 002e 0B       		.uleb128 0xb
 480 002f 0B       		.uleb128 0xb
 481 0030 3E       		.uleb128 0x3e
 482 0031 0B       		.uleb128 0xb
 483 0032 03       		.uleb128 0x3
 484 0033 08       		.uleb128 0x8
 485 0034 00       		.byte	0
 486 0035 00       		.byte	0
 487 0036 05       		.uleb128 0x5
 488 0037 2E       		.uleb128 0x2e
 489 0038 01       		.byte	0x1
 490 0039 3F       		.uleb128 0x3f
 491 003a 19       		.uleb128 0x19
 492 003b 03       		.uleb128 0x3
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 13


 493 003c 0E       		.uleb128 0xe
 494 003d 3A       		.uleb128 0x3a
 495 003e 0B       		.uleb128 0xb
 496 003f 3B       		.uleb128 0x3b
 497 0040 0B       		.uleb128 0xb
 498 0041 11       		.uleb128 0x11
 499 0042 01       		.uleb128 0x1
 500 0043 12       		.uleb128 0x12
 501 0044 06       		.uleb128 0x6
 502 0045 40       		.uleb128 0x40
 503 0046 18       		.uleb128 0x18
 504 0047 9642     		.uleb128 0x2116
 505 0049 19       		.uleb128 0x19
 506 004a 01       		.uleb128 0x1
 507 004b 13       		.uleb128 0x13
 508 004c 00       		.byte	0
 509 004d 00       		.byte	0
 510 004e 06       		.uleb128 0x6
 511 004f 34       		.uleb128 0x34
 512 0050 00       		.byte	0
 513 0051 03       		.uleb128 0x3
 514 0052 0E       		.uleb128 0xe
 515 0053 3A       		.uleb128 0x3a
 516 0054 0B       		.uleb128 0xb
 517 0055 3B       		.uleb128 0x3b
 518 0056 0B       		.uleb128 0xb
 519 0057 49       		.uleb128 0x49
 520 0058 13       		.uleb128 0x13
 521 0059 02       		.uleb128 0x2
 522 005a 18       		.uleb128 0x18
 523 005b 00       		.byte	0
 524 005c 00       		.byte	0
 525 005d 07       		.uleb128 0x7
 526 005e 0B       		.uleb128 0xb
 527 005f 01       		.byte	0x1
 528 0060 11       		.uleb128 0x11
 529 0061 01       		.uleb128 0x1
 530 0062 12       		.uleb128 0x12
 531 0063 06       		.uleb128 0x6
 532 0064 00       		.byte	0
 533 0065 00       		.byte	0
 534 0066 08       		.uleb128 0x8
 535 0067 34       		.uleb128 0x34
 536 0068 00       		.byte	0
 537 0069 03       		.uleb128 0x3
 538 006a 08       		.uleb128 0x8
 539 006b 3A       		.uleb128 0x3a
 540 006c 0B       		.uleb128 0xb
 541 006d 3B       		.uleb128 0x3b
 542 006e 0B       		.uleb128 0xb
 543 006f 49       		.uleb128 0x49
 544 0070 13       		.uleb128 0x13
 545 0071 02       		.uleb128 0x2
 546 0072 18       		.uleb128 0x18
 547 0073 00       		.byte	0
 548 0074 00       		.byte	0
 549 0075 09       		.uleb128 0x9
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 14


 550 0076 01       		.uleb128 0x1
 551 0077 01       		.byte	0x1
 552 0078 49       		.uleb128 0x49
 553 0079 13       		.uleb128 0x13
 554 007a 01       		.uleb128 0x1
 555 007b 13       		.uleb128 0x13
 556 007c 00       		.byte	0
 557 007d 00       		.byte	0
 558 007e 0A       		.uleb128 0xa
 559 007f 21       		.uleb128 0x21
 560 0080 00       		.byte	0
 561 0081 49       		.uleb128 0x49
 562 0082 13       		.uleb128 0x13
 563 0083 2F       		.uleb128 0x2f
 564 0084 0B       		.uleb128 0xb
 565 0085 00       		.byte	0
 566 0086 00       		.byte	0
 567 0087 0B       		.uleb128 0xb
 568 0088 2E       		.uleb128 0x2e
 569 0089 01       		.byte	0x1
 570 008a 3F       		.uleb128 0x3f
 571 008b 19       		.uleb128 0x19
 572 008c 03       		.uleb128 0x3
 573 008d 0E       		.uleb128 0xe
 574 008e 3A       		.uleb128 0x3a
 575 008f 0B       		.uleb128 0xb
 576 0090 3B       		.uleb128 0x3b
 577 0091 0B       		.uleb128 0xb
 578 0092 27       		.uleb128 0x27
 579 0093 19       		.uleb128 0x19
 580 0094 11       		.uleb128 0x11
 581 0095 01       		.uleb128 0x1
 582 0096 12       		.uleb128 0x12
 583 0097 06       		.uleb128 0x6
 584 0098 40       		.uleb128 0x40
 585 0099 18       		.uleb128 0x18
 586 009a 9642     		.uleb128 0x2116
 587 009c 19       		.uleb128 0x19
 588 009d 01       		.uleb128 0x1
 589 009e 13       		.uleb128 0x13
 590 009f 00       		.byte	0
 591 00a0 00       		.byte	0
 592 00a1 0C       		.uleb128 0xc
 593 00a2 05       		.uleb128 0x5
 594 00a3 00       		.byte	0
 595 00a4 03       		.uleb128 0x3
 596 00a5 0E       		.uleb128 0xe
 597 00a6 3A       		.uleb128 0x3a
 598 00a7 0B       		.uleb128 0xb
 599 00a8 3B       		.uleb128 0x3b
 600 00a9 0B       		.uleb128 0xb
 601 00aa 49       		.uleb128 0x49
 602 00ab 13       		.uleb128 0x13
 603 00ac 02       		.uleb128 0x2
 604 00ad 18       		.uleb128 0x18
 605 00ae 00       		.byte	0
 606 00af 00       		.byte	0
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 15


 607 00b0 0D       		.uleb128 0xd
 608 00b1 0F       		.uleb128 0xf
 609 00b2 00       		.byte	0
 610 00b3 0B       		.uleb128 0xb
 611 00b4 0B       		.uleb128 0xb
 612 00b5 49       		.uleb128 0x49
 613 00b6 13       		.uleb128 0x13
 614 00b7 00       		.byte	0
 615 00b8 00       		.byte	0
 616 00b9 0E       		.uleb128 0xe
 617 00ba 34       		.uleb128 0x34
 618 00bb 00       		.byte	0
 619 00bc 03       		.uleb128 0x3
 620 00bd 0E       		.uleb128 0xe
 621 00be 3A       		.uleb128 0x3a
 622 00bf 0B       		.uleb128 0xb
 623 00c0 3B       		.uleb128 0x3b
 624 00c1 05       		.uleb128 0x5
 625 00c2 49       		.uleb128 0x49
 626 00c3 13       		.uleb128 0x13
 627 00c4 3F       		.uleb128 0x3f
 628 00c5 19       		.uleb128 0x19
 629 00c6 3C       		.uleb128 0x3c
 630 00c7 19       		.uleb128 0x19
 631 00c8 00       		.byte	0
 632 00c9 00       		.byte	0
 633 00ca 0F       		.uleb128 0xf
 634 00cb 35       		.uleb128 0x35
 635 00cc 00       		.byte	0
 636 00cd 49       		.uleb128 0x49
 637 00ce 13       		.uleb128 0x13
 638 00cf 00       		.byte	0
 639 00d0 00       		.byte	0
 640 00d1 00       		.byte	0
 641              		.section	.debug_aranges,"",%progbits
 642 0000 24000000 		.4byte	0x24
 643 0004 0200     		.2byte	0x2
 644 0006 00000000 		.4byte	.Ldebug_info0
 645 000a 04       		.byte	0x4
 646 000b 00       		.byte	0
 647 000c 0000     		.2byte	0
 648 000e 0000     		.2byte	0
 649 0010 00000000 		.4byte	.LFB56
 650 0014 D8000000 		.4byte	.LFE56-.LFB56
 651 0018 00000000 		.4byte	.LFB57
 652 001c 2C000000 		.4byte	.LFE57-.LFB57
 653 0020 00000000 		.4byte	0
 654 0024 00000000 		.4byte	0
 655              		.section	.debug_ranges,"",%progbits
 656              	.Ldebug_ranges0:
 657 0000 00000000 		.4byte	.LFB56
 658 0004 D8000000 		.4byte	.LFE56
 659 0008 00000000 		.4byte	.LFB57
 660 000c 2C000000 		.4byte	.LFE57
 661 0010 00000000 		.4byte	0
 662 0014 00000000 		.4byte	0
 663              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 16


 664              	.Ldebug_line0:
 665 0000 A8010000 		.section	.debug_str,"MS",%progbits,1
 665      02004901 
 665      00000201 
 665      FB0E0D00 
 665      01010101 
 666              	.LASF9:
 667 0000 5F5F696E 		.ascii	"__int32_t\000"
 667      7433325F 
 667      7400
 668              	.LASF24:
 669 000a 61766572 		.ascii	"averageVolts\000"
 669      61676556 
 669      6F6C7473 
 669      00
 670              	.LASF25:
 671 0017 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 671      4320342E 
 671      392E3320 
 671      32303135 
 671      30333033 
 672 004a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 672      20726576 
 672      6973696F 
 672      6E203232 
 672      31323230 
 673 007d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 673      66756E63 
 673      74696F6E 
 673      2D736563 
 673      74696F6E 
 674              	.LASF30:
 675 00a5 6F757454 		.ascii	"outText\000"
 675      65787400 
 676              	.LASF10:
 677 00ad 696E7433 		.ascii	"int32_t\000"
 677      325F7400 
 678              	.LASF26:
 679 00b5 2E5C6D61 		.ascii	".\\main.c\000"
 679      696E2E63 
 679      00
 680              	.LASF14:
 681 00be 666C6F61 		.ascii	"float\000"
 681      7400
 682              	.LASF1:
 683 00c4 756E7369 		.ascii	"unsigned char\000"
 683      676E6564 
 683      20636861 
 683      7200
 684              	.LASF22:
 685 00d2 73616D70 		.ascii	"sampleCount\000"
 685      6C65436F 
 685      756E7400 
 686              	.LASF16:
 687 00de 63686172 		.ascii	"char8\000"
 687      3800
 688              	.LASF5:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 17


 689 00e4 6C6F6E67 		.ascii	"long unsigned int\000"
 689      20756E73 
 689      69676E65 
 689      6420696E 
 689      7400
 690              	.LASF13:
 691 00f6 696E7433 		.ascii	"int32\000"
 691      3200
 692              	.LASF27:
 693 00fc 473A5C44 		.ascii	"G:\\Documentos\\PSoC Creator\\CE95358.cydsn\000"
 693      6F63756D 
 693      656E746F 
 693      735C5053 
 693      6F432043 
 694              	.LASF31:
 695 0125 49544D5F 		.ascii	"ITM_RxBuffer\000"
 695      52784275 
 695      66666572 
 695      00
 696              	.LASF15:
 697 0132 646F7562 		.ascii	"double\000"
 697      6C6500
 698              	.LASF28:
 699 0139 6D61696E 		.ascii	"main\000"
 699      00
 700              	.LASF12:
 701 013e 75696E74 		.ascii	"uint16\000"
 701      313600
 702              	.LASF19:
 703 0145 61646352 		.ascii	"adcReading\000"
 703      65616469 
 703      6E6700
 704              	.LASF8:
 705 0150 756E7369 		.ascii	"unsigned int\000"
 705      676E6564 
 705      20696E74 
 705      00
 706              	.LASF7:
 707 015d 6C6F6E67 		.ascii	"long long unsigned int\000"
 707      206C6F6E 
 707      6720756E 
 707      7369676E 
 707      65642069 
 708              	.LASF20:
 709 0174 77724275 		.ascii	"wrBuffer\000"
 709      66666572 
 709      00
 710              	.LASF23:
 711 017d 6D566F6C 		.ascii	"mVolts\000"
 711      747300
 712              	.LASF18:
 713 0184 73697A65 		.ascii	"sizetype\000"
 713      74797065 
 713      00
 714              	.LASF6:
 715 018d 6C6F6E67 		.ascii	"long long int\000"
 715      206C6F6E 
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cc0DZRc8.s 			page 18


 715      6720696E 
 715      7400
 716              	.LASF29:
 717 019b 5072696E 		.ascii	"PrintToUSBUART\000"
 717      74546F55 
 717      53425541 
 717      525400
 718              	.LASF21:
 719 01aa 766F6C74 		.ascii	"voltSamples\000"
 719      53616D70 
 719      6C657300 
 720              	.LASF17:
 721 01b6 63686172 		.ascii	"char\000"
 721      00
 722              	.LASF2:
 723 01bb 73686F72 		.ascii	"short int\000"
 723      7420696E 
 723      7400
 724              	.LASF11:
 725 01c5 75696E74 		.ascii	"uint8\000"
 725      3800
 726              	.LASF4:
 727 01cb 6C6F6E67 		.ascii	"long int\000"
 727      20696E74 
 727      00
 728              	.LASF0:
 729 01d4 7369676E 		.ascii	"signed char\000"
 729      65642063 
 729      68617200 
 730              	.LASF3:
 731 01e0 73686F72 		.ascii	"short unsigned int\000"
 731      7420756E 
 731      7369676E 
 731      65642069 
 731      6E7400
 732              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
