ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_0.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ADC_SAR_0_initVar
  19              		.bss
  20              		.type	ADC_SAR_0_initVar, %object
  21              		.size	ADC_SAR_0_initVar, 1
  22              	ADC_SAR_0_initVar:
  23 0000 00       		.space	1
  24              		.comm	ADC_SAR_0_offset,2,2
  25              		.comm	ADC_SAR_0_countsPerVolt,2,2
  26              		.comm	ADC_SAR_0_countsPer10Volt,4,4
  27              		.comm	ADC_SAR_0_shift,2,2
  28              		.section	.text.ADC_SAR_0_Start,"ax",%progbits
  29              		.align	2
  30              		.global	ADC_SAR_0_Start
  31              		.thumb
  32              		.thumb_func
  33              		.type	ADC_SAR_0_Start, %function
  34              	ADC_SAR_0_Start:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_0.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * File Name: ADC_SAR_0.c
   3:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Version 2.10
   4:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_0.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_0.c **** #include "ADC_SAR_0.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_0.c **** #if(ADC_SAR_0_DEFAULT_INTERNAL_CLK)
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 2


  22:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #include "ADC_SAR_0_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_0.c **** #endif /* End ADC_SAR_0_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_0.c **** static void ADC_SAR_0_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /***************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_0.c **** uint8 ADC_SAR_0_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_0.c **** volatile int16 ADC_SAR_0_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_0.c **** volatile int16 ADC_SAR_0_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_0.c **** volatile int32 ADC_SAR_0_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_SAR_0.c **** volatile int16 ADC_SAR_0_shift;
  40:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  42:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_Start
  44:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  46:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  52:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  55:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  58:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  The ADC_SAR_0_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  to zero before call of ADC_SAR_0_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Init() and ADC_SAR_0_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  69:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  73:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_Start(void)
  75:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
  37              		.loc 1 75 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 3


  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  76:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  77:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     if(ADC_SAR_0_initVar == 0u)
  47              		.loc 1 78 0
  48 0004 054B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0008 002B     		cmp	r3, #0
  51 000a 04D1     		bne	.L2
  79:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
  80:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_Init();
  52              		.loc 1 80 0
  53 000c FFF7FEFF 		bl	ADC_SAR_0_Init
  81:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_initVar = 1u;
  54              		.loc 1 81 0
  55 0010 024B     		ldr	r3, .L3
  56 0012 0122     		movs	r2, #1
  57 0014 1A70     		strb	r2, [r3]
  58              	.L2:
  82:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
  83:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_Enable();
  59              		.loc 1 83 0
  60 0016 FFF7FEFF 		bl	ADC_SAR_0_Enable
  84:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
  61              		.loc 1 84 0
  62 001a 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 001c 00000000 		.word	ADC_SAR_0_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	ADC_SAR_0_Start, .-ADC_SAR_0_Start
  70              		.section	.text.ADC_SAR_0_Init,"ax",%progbits
  71              		.align	2
  72              		.global	ADC_SAR_0_Init
  73              		.thumb
  74              		.thumb_func
  75              		.type	ADC_SAR_0_Init, %function
  76              	ADC_SAR_0_Init:
  77              	.LFB1:
  85:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  86:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_Init
  89:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
  90:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  91:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_Start().
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 4


  95:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 102:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  The ADC_SAR_0_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 105:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_Init(void)
 107:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_theACLK_SetMode(CYCLK_DUTY);
  88              		.loc 1 111 0
  89 0004 1020     		movs	r0, #16
  90 0006 FFF7FEFF 		bl	ADC_SAR_0_theACLK_SetModeRegister
 112:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* End ADC_SAR_0_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 114:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         CyIntSetPriority(ADC_SAR_0_INTC_NUMBER, ADC_SAR_0_INTC_PRIOR_NUMBER);
  91              		.loc 1 116 0
  92 000a 0020     		movs	r0, #0
  93 000c 0721     		movs	r1, #7
  94 000e FFF7FEFF 		bl	CyIntSetPriority
 117:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         (void)CyIntSetVector(ADC_SAR_0_INTC_NUMBER, &ADC_SAR_0_ISR);
  95              		.loc 1 117 0
  96 0012 0020     		movs	r0, #0
  97 0014 0849     		ldr	r1, .L6
  98 0016 FFF7FEFF 		bl	CyIntSetVector
 118:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif   /* End ADC_SAR_0_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 120:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_CSR1_REG |= ADC_SAR_0_SAR_IRQ_MASK_EN | ADC_SAR_0_SAR_IRQ_MODE_EDGE;
  99              		.loc 1 121 0
 100 001a 084A     		ldr	r2, .L6+4
 101 001c 074B     		ldr	r3, .L6+4
 102 001e 1B78     		ldrb	r3, [r3]
 103 0020 DBB2     		uxtb	r3, r3
 104 0022 43F00603 		orr	r3, r3, #6
 105 0026 DBB2     		uxtb	r3, r3
 106 0028 1370     		strb	r3, [r2]
 122:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 5


 123:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SetResolution(ADC_SAR_0_DEFAULT_RESOLUTION);
 107              		.loc 1 124 0
 108 002a 0C20     		movs	r0, #12
 109 002c FFF7FEFF 		bl	ADC_SAR_0_SetResolution
 125:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_offset = 0;
 110              		.loc 1 125 0
 111 0030 034B     		ldr	r3, .L6+8
 112 0032 0022     		movs	r2, #0
 113 0034 1A80     		strh	r2, [r3]	@ movhi
 126:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 114              		.loc 1 126 0
 115 0036 80BD     		pop	{r7, pc}
 116              	.L7:
 117              		.align	2
 118              	.L6:
 119 0038 00000000 		.word	ADC_SAR_0_ISR
 120 003c 01590040 		.word	1073764609
 121 0040 00000000 		.word	ADC_SAR_0_offset
 122              		.cfi_endproc
 123              	.LFE1:
 124              		.size	ADC_SAR_0_Init, .-ADC_SAR_0_Init
 125              		.section	.text.ADC_SAR_0_Enable,"ax",%progbits
 126              		.align	2
 127              		.global	ADC_SAR_0_Enable
 128              		.thumb
 129              		.thumb_func
 130              		.type	ADC_SAR_0_Enable, %function
 131              	ADC_SAR_0_Enable:
 132              	.LFB2:
 127:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 128:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_Enable
 131:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 133:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 136:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 139:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 142:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 133              		.loc 1 144 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 6


 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uint8 enableInterrupts;
 147:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     enableInterrupts = CyEnterCriticalSection();
 145              		.loc 1 147 0
 146 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 147 000a 0346     		mov	r3, r0
 148 000c FB71     		strb	r3, [r7, #7]
 148:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 149:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_PWRMGR_SAR_REG |= ADC_SAR_0_ACT_PWR_SAR_EN;
 149              		.loc 1 150 0
 150 000e 2E4A     		ldr	r2, .L9
 151 0010 2D4B     		ldr	r3, .L9
 152 0012 1B78     		ldrb	r3, [r3]
 153 0014 DBB2     		uxtb	r3, r3
 154 0016 43F00103 		orr	r3, r3, #1
 155 001a DBB2     		uxtb	r3, r3
 156 001c 1370     		strb	r3, [r2]
 151:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 152:.\Generated_Source\PSoC5/ADC_SAR_0.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_STBY_PWRMGR_SAR_REG |= ADC_SAR_0_STBY_PWR_SAR_EN;
 157              		.loc 1 153 0
 158 001e 2B4A     		ldr	r2, .L9+4
 159 0020 2A4B     		ldr	r3, .L9+4
 160 0022 1B78     		ldrb	r3, [r3]
 161 0024 DBB2     		uxtb	r3, r3
 162 0026 43F00103 		orr	r3, r3, #1
 163 002a DBB2     		uxtb	r3, r3
 164 002c 1370     		strb	r3, [r2]
 154:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 155:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_PWRMGR_CLK_REG |= ADC_SAR_0_ACT_PWR_CLK_EN;
 165              		.loc 1 157 0
 166 002e 284A     		ldr	r2, .L9+8
 167 0030 274B     		ldr	r3, .L9+8
 168 0032 1B78     		ldrb	r3, [r3]
 169 0034 DBB2     		uxtb	r3, r3
 170 0036 43F00103 		orr	r3, r3, #1
 171 003a DBB2     		uxtb	r3, r3
 172 003c 1370     		strb	r3, [r2]
 158:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_STBY_PWRMGR_CLK_REG |= ADC_SAR_0_STBY_PWR_CLK_EN;
 173              		.loc 1 158 0
 174 003e 254A     		ldr	r2, .L9+12
 175 0040 244B     		ldr	r3, .L9+12
 176 0042 1B78     		ldrb	r3, [r3]
 177 0044 DBB2     		uxtb	r3, r3
 178 0046 43F00103 		orr	r3, r3, #1
 179 004a DBB2     		uxtb	r3, r3
 180 004c 1370     		strb	r3, [r2]
 159:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* End ADC_SAR_0_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 161:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     tmpReg = ADC_SAR_0_SAR_CSR3_REG;
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 7


 181              		.loc 1 162 0
 182 004e 224B     		ldr	r3, .L9+16
 183 0050 1B78     		ldrb	r3, [r3]
 184 0052 BB71     		strb	r3, [r7, #6]
 163:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     tmpReg |= ADC_SAR_0_SAR_EN_BUF_VCM_EN;
 185              		.loc 1 163 0
 186 0054 BB79     		ldrb	r3, [r7, #6]
 187 0056 43F00203 		orr	r3, r3, #2
 188 005a BB71     		strb	r3, [r7, #6]
 164:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if((ADC_SAR_0_DEFAULT_REFERENCE == ADC_SAR_0__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         tmpReg &= (uint8)~ADC_SAR_0_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         tmpReg |= ADC_SAR_0_SAR_EN_BUF_VREF_EN;
 189              		.loc 1 169 0
 190 005c BB79     		ldrb	r3, [r7, #6]
 191 005e 43F00103 		orr	r3, r3, #1
 192 0062 BB71     		strb	r3, [r7, #6]
 170:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* ADC_SAR_0_DEFAULT_REFERENCE == ADC_SAR_0__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_CSR3_REG = tmpReg;
 193              		.loc 1 171 0
 194 0064 1C4A     		ldr	r2, .L9+16
 195 0066 BB79     		ldrb	r3, [r7, #6]
 196 0068 1370     		strb	r3, [r2]
 172:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 173:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #if(ADC_SAR_0_DEFAULT_REFERENCE == ADC_SAR_0__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             ADC_SAR_0_SAR_CSR6_REG = ADC_SAR_0_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             ADC_SAR_0_SAR_CSR6_REG = ADC_SAR_0_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #endif /* ADC_SAR_0_DEFAULT_REFERENCE == ADC_SAR_0__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #if(ADC_SAR_0_DEFAULT_REFERENCE == ADC_SAR_0__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             ADC_SAR_0_SAR_CSR6_REG = ADC_SAR_0_INT_VREF;            /* S3 + S4 */
 197              		.loc 1 182 0
 198 006a 1C4B     		ldr	r3, .L9+20
 199 006c 1822     		movs	r2, #24
 200 006e 1A70     		strb	r2, [r3]
 183:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             ADC_SAR_0_SAR_CSR6_REG = ADC_SAR_0_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #endif /* ADC_SAR_0_DEFAULT_REFERENCE == ADC_SAR_0__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 188:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_SAR_CSR5_REG &= (uint8)~ADC_SAR_0_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_SAR_CSR5_REG |= ADC_SAR_0_SAR_DLY_INC;
 201              		.loc 1 192 0
 202 0070 1B4A     		ldr	r2, .L9+24
 203 0072 1B4B     		ldr	r3, .L9+24
 204 0074 1B78     		ldrb	r3, [r3]
 205 0076 DBB2     		uxtb	r3, r3
 206 0078 43F04003 		orr	r3, r3, #64
 207 007c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 8


 208 007e 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* ADC_SAR_0_CLOCK_FREQUENCY > (ADC_SAR_0_MAX_FREQUENCY / 2) */
 194:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 195:.\Generated_Source\PSoC5/ADC_SAR_0.c ****      /* Delay control for comparator latch enable, low delay, (Default for 1MSPS) */
 196:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 197:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_SAR_CSR5_REG |= ADC_SAR_0_SAR_DCEN;
 198:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #else /* Delay control for comparator latch enable, high delay (for <500ksps)*/
 199:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_SAR_CSR5_REG &= (uint8)~ADC_SAR_0_SAR_DCEN;
 209              		.loc 1 199 0
 210 0080 174A     		ldr	r2, .L9+24
 211 0082 174B     		ldr	r3, .L9+24
 212 0084 1B78     		ldrb	r3, [r3]
 213 0086 DBB2     		uxtb	r3, r3
 214 0088 23F02003 		bic	r3, r3, #32
 215 008c DBB2     		uxtb	r3, r3
 216 008e 1370     		strb	r3, [r2]
 200:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* ADC_SAR_0_CLOCK_FREQUENCY > (ADC_SAR_0_MAX_FREQUENCY / 2) */
 201:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 202:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 203:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_0_DEFAULT_POWER << ADC_SAR_0_SAR_POWER_SHIFT)
 217              		.loc 1 203 0
 218 0090 144B     		ldr	r3, .L9+28
 219 0092 C822     		movs	r2, #200
 220 0094 1A70     		strb	r2, [r3]
 204:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 205:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_0_DEFAULT_REFERENCE != ADC_SAR_0__EXT_REF))
 206:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         | ADC_SAR_0_SAR_HIZ_CLEAR
 207:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* SAR_HIZ_CLEAR */
 208:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /*Set Convertion mode */
 209:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_DEFAULT_CONV_MODE != ADC_SAR_0__FREE_RUNNING)      /* If triggered mode */
 210:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         | ADC_SAR_0_SAR_MX_SOF_UDB           /* source: UDB */
 211:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         | ADC_SAR_0_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 212:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* ADC_SAR_0_DEFAULT_CONV_MODE */
 213:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ; /* end of multiple line initialization */
 214:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 215:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_TR0_REG = ADC_SAR_0_SAR_CAP_TRIM_2;
 221              		.loc 1 215 0
 222 0096 144B     		ldr	r3, .L9+32
 223 0098 0222     		movs	r2, #2
 224 009a 1A70     		strb	r2, [r3]
 216:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 217:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Enable clock for SAR ADC*/
 218:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_CLK_REG |= ADC_SAR_0_SAR_MX_CLK_EN;
 225              		.loc 1 218 0
 226 009c 134A     		ldr	r2, .L9+36
 227 009e 134B     		ldr	r3, .L9+36
 228 00a0 1B78     		ldrb	r3, [r3]
 229 00a2 DBB2     		uxtb	r3, r3
 230 00a4 43F00803 		orr	r3, r3, #8
 231 00a8 DBB2     		uxtb	r3, r3
 232 00aa 1370     		strb	r3, [r2]
 219:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 220:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 233              		.loc 1 220 0
 234 00ac 0A20     		movs	r0, #10
 235 00ae FFF7FEFF 		bl	CyDelayUs
 221:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 9


 222:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_IRQ_REMOVE == 0u)
 223:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         /* Clear a pending interrupt */
 224:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         CyIntClearPending(ADC_SAR_0_INTC_NUMBER);
 236              		.loc 1 224 0
 237 00b2 0F4B     		ldr	r3, .L9+40
 238 00b4 0122     		movs	r2, #1
 239 00b6 1A60     		str	r2, [r3]
 225:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif   /* End ADC_SAR_0_IRQ_REMOVE */
 226:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 227:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     CyExitCriticalSection(enableInterrupts);
 240              		.loc 1 227 0
 241 00b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 242 00ba 1846     		mov	r0, r3
 243 00bc FFF7FEFF 		bl	CyExitCriticalSection
 228:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 244              		.loc 1 228 0
 245 00c0 0837     		adds	r7, r7, #8
 246              		.cfi_def_cfa_offset 8
 247 00c2 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 00c4 80BD     		pop	{r7, pc}
 251              	.L10:
 252 00c6 00BF     		.align	2
 253              	.L9:
 254 00c8 AB430040 		.word	1073759147
 255 00cc BB430040 		.word	1073759163
 256 00d0 A1430040 		.word	1073759137
 257 00d4 B1430040 		.word	1073759153
 258 00d8 03590040 		.word	1073764611
 259 00dc 06590040 		.word	1073764614
 260 00e0 05590040 		.word	1073764613
 261 00e4 00590040 		.word	1073764608
 262 00e8 14460040 		.word	1073759764
 263 00ec 275B0040 		.word	1073765159
 264 00f0 80E200E0 		.word	-536812928
 265              		.cfi_endproc
 266              	.LFE2:
 267              		.size	ADC_SAR_0_Enable, .-ADC_SAR_0_Enable
 268              		.section	.text.ADC_SAR_0_Stop,"ax",%progbits
 269              		.align	2
 270              		.global	ADC_SAR_0_Stop
 271              		.thumb
 272              		.thumb_func
 273              		.type	ADC_SAR_0_Stop, %function
 274              	ADC_SAR_0_Stop:
 275              	.LFB3:
 229:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 230:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 231:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_Stop
 233:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 234:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 235:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 236:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 237:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 238:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 10


 239:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 240:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 241:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 242:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 245:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_Stop(void)
 246:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 276              		.loc 1 246 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 247:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uint8 enableInterrupts;
 248:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     enableInterrupts = CyEnterCriticalSection();
 288              		.loc 1 248 0
 289 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 290 000a 0346     		mov	r3, r0
 291 000c FB71     		strb	r3, [r7, #7]
 249:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 250:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Stop all conversions */
 251:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_CSR0_REG &= (uint8)~ADC_SAR_0_SAR_SOF_START_CONV;
 292              		.loc 1 251 0
 293 000e 174A     		ldr	r2, .L12
 294 0010 164B     		ldr	r3, .L12
 295 0012 1B78     		ldrb	r3, [r3]
 296 0014 DBB2     		uxtb	r3, r3
 297 0016 23F00103 		bic	r3, r3, #1
 298 001a DBB2     		uxtb	r3, r3
 299 001c 1370     		strb	r3, [r2]
 252:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Disable the SAR ADC block in Active Power Mode */
 253:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_0_ACT_PWR_SAR_EN;
 300              		.loc 1 253 0
 301 001e 144A     		ldr	r2, .L12+4
 302 0020 134B     		ldr	r3, .L12+4
 303 0022 1B78     		ldrb	r3, [r3]
 304 0024 DBB2     		uxtb	r3, r3
 305 0026 23F00103 		bic	r3, r3, #1
 306 002a DBB2     		uxtb	r3, r3
 307 002c 1370     		strb	r3, [r2]
 254:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Disable the SAR ADC in Standby Power Mode */
 255:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_0_STBY_PWR_SAR_EN;
 308              		.loc 1 255 0
 309 002e 114A     		ldr	r2, .L12+8
 310 0030 104B     		ldr	r3, .L12+8
 311 0032 1B78     		ldrb	r3, [r3]
 312 0034 DBB2     		uxtb	r3, r3
 313 0036 23F00103 		bic	r3, r3, #1
 314 003a DBB2     		uxtb	r3, r3
 315 003c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 11


 256:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 257:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* This is only valid if there is an internal clock */
 258:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(ADC_SAR_0_DEFAULT_INTERNAL_CLK)
 259:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_0_ACT_PWR_CLK_EN;
 316              		.loc 1 259 0
 317 003e 0E4A     		ldr	r2, .L12+12
 318 0040 0D4B     		ldr	r3, .L12+12
 319 0042 1B78     		ldrb	r3, [r3]
 320 0044 DBB2     		uxtb	r3, r3
 321 0046 23F00103 		bic	r3, r3, #1
 322 004a DBB2     		uxtb	r3, r3
 323 004c 1370     		strb	r3, [r2]
 260:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_0_STBY_PWR_CLK_EN;
 324              		.loc 1 260 0
 325 004e 0B4A     		ldr	r2, .L12+16
 326 0050 0A4B     		ldr	r3, .L12+16
 327 0052 1B78     		ldrb	r3, [r3]
 328 0054 DBB2     		uxtb	r3, r3
 329 0056 23F00103 		bic	r3, r3, #1
 330 005a DBB2     		uxtb	r3, r3
 331 005c 1370     		strb	r3, [r2]
 261:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* End ADC_SAR_0_DEFAULT_INTERNAL_CLK */
 262:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 263:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     CyExitCriticalSection(enableInterrupts);
 332              		.loc 1 263 0
 333 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 334 0060 1846     		mov	r0, r3
 335 0062 FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 265:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 336              		.loc 1 265 0
 337 0066 0837     		adds	r7, r7, #8
 338              		.cfi_def_cfa_offset 8
 339 0068 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 006a 80BD     		pop	{r7, pc}
 343              	.L13:
 344              		.align	2
 345              	.L12:
 346 006c 00590040 		.word	1073764608
 347 0070 AB430040 		.word	1073759147
 348 0074 BB430040 		.word	1073759163
 349 0078 A1430040 		.word	1073759137
 350 007c B1430040 		.word	1073759153
 351              		.cfi_endproc
 352              	.LFE3:
 353              		.size	ADC_SAR_0_Stop, .-ADC_SAR_0_Stop
 354              		.section	.text.ADC_SAR_0_SetPower,"ax",%progbits
 355              		.align	2
 356              		.global	ADC_SAR_0_SetPower
 357              		.thumb
 358              		.thumb_func
 359              		.type	ADC_SAR_0_SetPower, %function
 360              	ADC_SAR_0_SetPower:
 361              	.LFB4:
 266:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 12


 267:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_SetPower
 270:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 271:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 272:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 273:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Sets the operational power of the ADC. You should use the higher power
 274:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  settings with faster clock speeds.
 275:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 276:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 277:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  power:  Power setting for ADC
 278:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  0 ->    Normal
 279:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  1 ->    Medium power
 280:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  2 ->    1.25 power
 281:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  3 ->    Minimum power.
 282:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 283:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 284:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 285:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_SetPower(uint8 power)
 288:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 362              		.loc 1 288 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 16
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367 0000 80B4     		push	{r7}
 368              		.cfi_def_cfa_offset 4
 369              		.cfi_offset 7, -4
 370 0002 85B0     		sub	sp, sp, #20
 371              		.cfi_def_cfa_offset 24
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 0346     		mov	r3, r0
 375 0008 FB71     		strb	r3, [r7, #7]
 289:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uint8 tmpReg;
 290:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 291:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* mask off invalid power settings */
 292:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     power &= ADC_SAR_0_SAR_API_POWER_MASK;
 376              		.loc 1 292 0
 377 000a FB79     		ldrb	r3, [r7, #7]
 378 000c 03F00303 		and	r3, r3, #3
 379 0010 FB71     		strb	r3, [r7, #7]
 293:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 294:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Set Power parameter  */
 295:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     tmpReg = ADC_SAR_0_SAR_CSR0_REG & (uint8)~ADC_SAR_0_SAR_POWER_MASK;
 380              		.loc 1 295 0
 381 0012 0A4B     		ldr	r3, .L15
 382 0014 1B78     		ldrb	r3, [r3]
 383 0016 DBB2     		uxtb	r3, r3
 384 0018 03F03F03 		and	r3, r3, #63
 385 001c FB73     		strb	r3, [r7, #15]
 296:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     tmpReg |= (uint8)(power << ADC_SAR_0_SAR_POWER_SHIFT);
 386              		.loc 1 296 0
 387 001e FB79     		ldrb	r3, [r7, #7]
 388 0020 9B01     		lsls	r3, r3, #6
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 13


 389 0022 DAB2     		uxtb	r2, r3
 390 0024 FB7B     		ldrb	r3, [r7, #15]
 391 0026 1343     		orrs	r3, r3, r2
 392 0028 FB73     		strb	r3, [r7, #15]
 297:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_CSR0_REG = tmpReg;
 393              		.loc 1 297 0
 394 002a 044A     		ldr	r2, .L15
 395 002c FB7B     		ldrb	r3, [r7, #15]
 396 002e 1370     		strb	r3, [r2]
 298:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 397              		.loc 1 298 0
 398 0030 1437     		adds	r7, r7, #20
 399              		.cfi_def_cfa_offset 4
 400 0032 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0034 5DF8047B 		ldr	r7, [sp], #4
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 0038 7047     		bx	lr
 407              	.L16:
 408 003a 00BF     		.align	2
 409              	.L15:
 410 003c 00590040 		.word	1073764608
 411              		.cfi_endproc
 412              	.LFE4:
 413              		.size	ADC_SAR_0_SetPower, .-ADC_SAR_0_SetPower
 414              		.section	.text.ADC_SAR_0_SetResolution,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_SAR_0_SetResolution
 417              		.thumb
 418              		.thumb_func
 419              		.type	ADC_SAR_0_SetResolution, %function
 420              	ADC_SAR_0_SetResolution:
 421              	.LFB5:
 299:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 300:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 301:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 302:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_SetResolution
 303:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 304:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 305:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 306:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Sets the Relution of the SAR.
 307:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 308:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 309:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  resolution:
 310:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  12 ->    RES12
 311:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  10 ->    RES10
 312:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  8  ->    RES8
 313:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 314:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 315:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 316:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 317:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Side Effects:
 318:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 319:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  recommended best practice is to stop conversions with
 320:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_StopConvert(), change the resolution, then restart the
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 14


 321:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  conversions with ADC_StartConvert().
 322:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  If you decide not to stop conversions before calling this API, you
 323:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 324:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  before changing the resolution.
 325:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 326:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  not be changed until the current conversion is complete. Data will not be
 327:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 328:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  clock cycles.
 329:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  You may need add a delay of this number of clock cycles after
 330:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SetResolution() is called before data is valid again.
 331:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 332:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 333:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 334:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  input range, and voltage reference.
 335:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 336:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 337:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_SetResolution(uint8 resolution)
 338:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 422              		.loc 1 338 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 16
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 84B0     		sub	sp, sp, #16
 431              		.cfi_def_cfa_offset 24
 432 0004 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 434 0006 0346     		mov	r3, r0
 435 0008 FB71     		strb	r3, [r7, #7]
 339:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uint8 tmpReg;
 340:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 341:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 342:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     switch (resolution)
 436              		.loc 1 342 0
 437 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 000c 0A2B     		cmp	r3, #10
 439 000e 07D0     		beq	.L19
 440 0010 0C2B     		cmp	r3, #12
 441 0012 02D0     		beq	.L20
 442 0014 082B     		cmp	r3, #8
 443 0016 06D0     		beq	.L21
 444 0018 08E0     		b	.L23
 445              	.L20:
 343:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 344:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         case (uint8)ADC_SAR_0__BITS_12:
 345:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             tmpReg = ADC_SAR_0_SAR_RESOLUTION_12BIT | ADC_SAR_0_SAR_SAMPLE_WIDTH;
 446              		.loc 1 345 0
 447 001a C423     		movs	r3, #196
 448 001c FB73     		strb	r3, [r7, #15]
 346:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 449              		.loc 1 346 0
 450 001e 0BE0     		b	.L22
 451              	.L19:
 347:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         case (uint8)ADC_SAR_0__BITS_10:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 15


 348:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             tmpReg = ADC_SAR_0_SAR_RESOLUTION_10BIT | ADC_SAR_0_SAR_SAMPLE_WIDTH;
 452              		.loc 1 348 0
 453 0020 8423     		movs	r3, #132
 454 0022 FB73     		strb	r3, [r7, #15]
 349:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 455              		.loc 1 349 0
 456 0024 08E0     		b	.L22
 457              	.L21:
 350:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         case (uint8)ADC_SAR_0__BITS_8:
 351:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             tmpReg = ADC_SAR_0_SAR_RESOLUTION_8BIT | ADC_SAR_0_SAR_SAMPLE_WIDTH;
 458              		.loc 1 351 0
 459 0026 4423     		movs	r3, #68
 460 0028 FB73     		strb	r3, [r7, #15]
 352:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 461              		.loc 1 352 0
 462 002a 05E0     		b	.L22
 463              	.L23:
 353:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         default:
 354:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             tmpReg = ADC_SAR_0_SAR_RESOLUTION_12BIT | ADC_SAR_0_SAR_SAMPLE_WIDTH;
 464              		.loc 1 354 0
 465 002c C423     		movs	r3, #196
 466 002e FB73     		strb	r3, [r7, #15]
 355:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 356:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             CYASSERT(0u != 0u);
 467              		.loc 1 356 0
 468 0030 0020     		movs	r0, #0
 469 0032 FFF7FEFF 		bl	CyHalt
 357:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 470              		.loc 1 357 0
 471 0036 00BF     		nop
 472              	.L22:
 358:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 359:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_SAR_CSR2_REG = tmpReg;
 473              		.loc 1 359 0
 474 0038 044A     		ldr	r2, .L24
 475 003a FB7B     		ldrb	r3, [r7, #15]
 476 003c 1370     		strb	r3, [r2]
 360:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 361:.\Generated_Source\PSoC5/ADC_SAR_0.c ****      /* Calculate gain for convert counts to volts */
 362:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_CalcGain(resolution);
 477              		.loc 1 362 0
 478 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 479 0040 1846     		mov	r0, r3
 480 0042 FFF7FEFF 		bl	ADC_SAR_0_CalcGain
 363:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 481              		.loc 1 363 0
 482 0046 1037     		adds	r7, r7, #16
 483              		.cfi_def_cfa_offset 8
 484 0048 BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 004a 80BD     		pop	{r7, pc}
 488              	.L25:
 489              		.align	2
 490              	.L24:
 491 004c 02590040 		.word	1073764610
 492              		.cfi_endproc
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 16


 493              	.LFE5:
 494              		.size	ADC_SAR_0_SetResolution, .-ADC_SAR_0_SetResolution
 495              		.section	.text.ADC_SAR_0_StartConvert,"ax",%progbits
 496              		.align	2
 497              		.global	ADC_SAR_0_StartConvert
 498              		.thumb
 499              		.thumb_func
 500              		.type	ADC_SAR_0_StartConvert, %function
 501              	ADC_SAR_0_StartConvert:
 502              	.LFB6:
 364:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 365:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 366:.\Generated_Source\PSoC5/ADC_SAR_0.c **** #if(ADC_SAR_0_DEFAULT_CONV_MODE != ADC_SAR_0__HARDWARE_TRIGGER)
 367:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 368:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 369:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /*******************************************************************************
 370:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Function Name: ADC_SAR_0_StartConvert
 371:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ********************************************************************************
 372:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 373:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Summary:
 374:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 375:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  continuously. In software trigger mode, the function also acts as a software
 376:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  version of the SOC and every conversion must be triggered by
 377:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  ADC_SAR_0_StartConvert(). This function is not available when the
 378:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  Hardware Trigger sample mode is selected.
 379:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 380:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Parameters:
 381:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  None.
 382:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 383:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Return:
 384:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 386:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Theory:
 387:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 388:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  run continuously. In a software trigger mode the function also acts as a
 389:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 390:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 391:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 392:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Side Effects:
 393:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  In a software trigger mode the function switches source for SOF from the
 394:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  external pin to the internal SOF generation. Application should not call
 395:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  StartConvert if external source used for SOF.
 396:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 397:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *******************************************************************************/
 398:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     void ADC_SAR_0_StartConvert(void)
 399:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 503              		.loc 1 399 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 400:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #if(ADC_SAR_0_DEFAULT_CONV_MODE != ADC_SAR_0__FREE_RUNNING)  /* If software triggered mode 
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 17


 401:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             ADC_SAR_0_SAR_CSR0_REG &= (uint8)~ADC_SAR_0_SAR_MX_SOF_UDB;   /* source: SOF bit */
 402:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #endif /* End ADC_SAR_0_DEFAULT_CONV_MODE */
 403:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 404:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         /* Start the conversion */
 405:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_SAR_CSR0_REG |= ADC_SAR_0_SAR_SOF_START_CONV;
 513              		.loc 1 405 0
 514 0004 054A     		ldr	r2, .L27
 515 0006 054B     		ldr	r3, .L27
 516 0008 1B78     		ldrb	r3, [r3]
 517 000a DBB2     		uxtb	r3, r3
 518 000c 43F00103 		orr	r3, r3, #1
 519 0010 DBB2     		uxtb	r3, r3
 520 0012 1370     		strb	r3, [r2]
 406:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 521              		.loc 1 406 0
 522 0014 BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0016 5DF8047B 		ldr	r7, [sp], #4
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 001a 7047     		bx	lr
 529              	.L28:
 530              		.align	2
 531              	.L27:
 532 001c 00590040 		.word	1073764608
 533              		.cfi_endproc
 534              	.LFE6:
 535              		.size	ADC_SAR_0_StartConvert, .-ADC_SAR_0_StartConvert
 536              		.section	.text.ADC_SAR_0_StopConvert,"ax",%progbits
 537              		.align	2
 538              		.global	ADC_SAR_0_StopConvert
 539              		.thumb
 540              		.thumb_func
 541              		.type	ADC_SAR_0_StopConvert, %function
 542              	ADC_SAR_0_StopConvert:
 543              	.LFB7:
 407:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 408:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 409:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /*******************************************************************************
 410:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Function Name: ADC_SAR_0_StopConvert
 411:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ********************************************************************************
 412:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 413:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Summary:
 414:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 415:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  that conversion will complete, but no further conversions will occur. This
 416:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 417:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 418:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  None.
 420:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 421:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Return:
 422:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  None.
 423:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 424:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Theory:
 425:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  Stops ADC conversion in Free Running mode.
 426:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 18


 427:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     * Side Effects:
 428:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 429:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 430:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *
 431:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *******************************************************************************/
 432:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     void ADC_SAR_0_StopConvert(void)
 433:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 544              		.loc 1 433 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549 0000 80B4     		push	{r7}
 550              		.cfi_def_cfa_offset 4
 551              		.cfi_offset 7, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 434:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         /* Stop all conversions */
 435:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_SAR_CSR0_REG &= (uint8)~ADC_SAR_0_SAR_SOF_START_CONV;
 554              		.loc 1 435 0
 555 0004 054A     		ldr	r2, .L30
 556 0006 054B     		ldr	r3, .L30
 557 0008 1B78     		ldrb	r3, [r3]
 558 000a DBB2     		uxtb	r3, r3
 559 000c 23F00103 		bic	r3, r3, #1
 560 0010 DBB2     		uxtb	r3, r3
 561 0012 1370     		strb	r3, [r2]
 436:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 437:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #if(ADC_SAR_0_DEFAULT_CONV_MODE != ADC_SAR_0__FREE_RUNNING)  /* If software triggered mode 
 438:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             /* Return source to UDB for hardware SOF signal */
 439:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             ADC_SAR_0_SAR_CSR0_REG |= ADC_SAR_0_SAR_MX_SOF_UDB;    /* source: UDB */
 440:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         #endif /* End ADC_SAR_0_DEFAULT_CONV_MODE */
 441:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 442:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 562              		.loc 1 442 0
 563 0014 BD46     		mov	sp, r7
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0016 5DF8047B 		ldr	r7, [sp], #4
 567              		.cfi_restore 7
 568              		.cfi_def_cfa_offset 0
 569 001a 7047     		bx	lr
 570              	.L31:
 571              		.align	2
 572              	.L30:
 573 001c 00590040 		.word	1073764608
 574              		.cfi_endproc
 575              	.LFE7:
 576              		.size	ADC_SAR_0_StopConvert, .-ADC_SAR_0_StopConvert
 577              		.section	.text.ADC_SAR_0_IsEndConversion,"ax",%progbits
 578              		.align	2
 579              		.global	ADC_SAR_0_IsEndConversion
 580              		.thumb
 581              		.thumb_func
 582              		.type	ADC_SAR_0_IsEndConversion, %function
 583              	ADC_SAR_0_IsEndConversion:
 584              	.LFB8:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 19


 443:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 444:.\Generated_Source\PSoC5/ADC_SAR_0.c **** #endif /* End ADC_SAR_0_DEFAULT_CONV_MODE != ADC_SAR_0__HARDWARE_TRIGGER */
 445:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 446:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 447:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 448:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_IsEndConversion
 449:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 450:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 451:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 452:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Immediately returns the status of the conversion or does not return
 453:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  (blocking) until the conversion completes, depending on the retMode
 454:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  parameter.
 455:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 456:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 457:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  retMode:  Check conversion return mode.
 458:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *   ADC_SAR_0_RETURN_STATUS: Immediately returns the status. If the
 459:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *     value returned is zero, the conversion is not complete, and this function
 460:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *     should be retried until a nonzero result is returned.
 461:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *   ADC_SAR_0_WAIT_FOR_RESULT: Does not return a result until the ADC
 462:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *     conversion is complete.
 463:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 464:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 465:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 466:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *           1 =>  The last conversion is complete.
 467:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 468:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Side Effects:
 469:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  This function reads the end of conversion status, which is cleared on read.
 470:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 471:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 472:.\Generated_Source\PSoC5/ADC_SAR_0.c **** uint8 ADC_SAR_0_IsEndConversion(uint8 retMode)
 473:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 585              		.loc 1 473 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 16
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589 0000 80B5     		push	{r7, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 84B0     		sub	sp, sp, #16
 594              		.cfi_def_cfa_offset 24
 595 0004 00AF     		add	r7, sp, #0
 596              		.cfi_def_cfa_register 7
 597 0006 0346     		mov	r3, r0
 598 0008 FB71     		strb	r3, [r7, #7]
 599              	.L34:
 474:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uint8 status;
 475:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 476:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     do
 477:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 478:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         status = ADC_SAR_0_SAR_CSR1_REG & ADC_SAR_0_SAR_EOF_1;
 600              		.loc 1 478 0 discriminator 2
 601 000a 0C4B     		ldr	r3, .L37
 602 000c 1B78     		ldrb	r3, [r3]
 603 000e DBB2     		uxtb	r3, r3
 604 0010 03F00103 		and	r3, r3, #1
 605 0014 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 20


 479:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     } while ((status != ADC_SAR_0_SAR_EOF_1) && (retMode == ADC_SAR_0_WAIT_FOR_RESULT));
 606              		.loc 1 479 0 discriminator 2
 607 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 608 0018 012B     		cmp	r3, #1
 609 001a 02D0     		beq	.L33
 610              		.loc 1 479 0 is_stmt 0 discriminator 1
 611 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612 001e 002B     		cmp	r3, #0
 613 0020 F3D0     		beq	.L34
 614              	.L33:
 480:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* If convertion complete, wait until EOF bit released */
 481:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     if(status == ADC_SAR_0_SAR_EOF_1)
 615              		.loc 1 481 0 is_stmt 1
 616 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 617 0024 012B     		cmp	r3, #1
 618 0026 04D1     		bne	.L35
 482:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 483:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         /* wait one ADC clock to let the EOC status bit release */
 484:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         CyDelayUs(1u);
 619              		.loc 1 484 0
 620 0028 0120     		movs	r0, #1
 621 002a FFF7FEFF 		bl	CyDelayUs
 485:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 486:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         CY_GET_REG8(ADC_SAR_0_SAR_CSR1_PTR);
 622              		.loc 1 486 0
 623 002e 034B     		ldr	r3, .L37
 624 0030 1B78     		ldrb	r3, [r3]
 625              	.L35:
 487:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 488:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 489:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     return(status);
 626              		.loc 1 489 0
 627 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 490:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 628              		.loc 1 490 0
 629 0034 1846     		mov	r0, r3
 630 0036 1037     		adds	r7, r7, #16
 631              		.cfi_def_cfa_offset 8
 632 0038 BD46     		mov	sp, r7
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 003a 80BD     		pop	{r7, pc}
 636              	.L38:
 637              		.align	2
 638              	.L37:
 639 003c 01590040 		.word	1073764609
 640              		.cfi_endproc
 641              	.LFE8:
 642              		.size	ADC_SAR_0_IsEndConversion, .-ADC_SAR_0_IsEndConversion
 643              		.section	.text.ADC_SAR_0_GetResult8,"ax",%progbits
 644              		.align	2
 645              		.global	ADC_SAR_0_GetResult8
 646              		.thumb
 647              		.thumb_func
 648              		.type	ADC_SAR_0_GetResult8, %function
 649              	ADC_SAR_0_GetResult8:
 650              	.LFB9:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 21


 491:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 492:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 493:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_GetResult8
 495:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 496:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 497:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 498:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 499:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  than 8 bits, the function returns the LSB of the result.
 500:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_IsEndConversion() should be called to verify that the data
 501:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *   sample is ready.
 502:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 503:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 504:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 505:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 507:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  The LSB of the last ADC conversion.
 508:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 510:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_shift - used to convert the ADC counts to the 2s
 511:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  compliment form.
 512:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 513:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Side Effects:
 514:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Converts the ADC counts to the 2s complement form.
 515:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 516:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 517:.\Generated_Source\PSoC5/ADC_SAR_0.c **** int8 ADC_SAR_0_GetResult8( void )
 518:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 651              		.loc 1 518 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656 0000 80B4     		push	{r7}
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 519:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     return( (int8)ADC_SAR_0_SAR_WRK0_REG - (int8)ADC_SAR_0_shift);
 661              		.loc 1 519 0
 662 0004 074B     		ldr	r3, .L41
 663 0006 1B78     		ldrb	r3, [r3]
 664 0008 DAB2     		uxtb	r2, r3
 665 000a 074B     		ldr	r3, .L41+4
 666 000c 1B88     		ldrh	r3, [r3]	@ movhi
 667 000e 9BB2     		uxth	r3, r3
 668 0010 DBB2     		uxtb	r3, r3
 669 0012 D31A     		subs	r3, r2, r3
 670 0014 DBB2     		uxtb	r3, r3
 671 0016 DBB2     		uxtb	r3, r3
 672 0018 5BB2     		sxtb	r3, r3
 520:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 673              		.loc 1 520 0
 674 001a 1846     		mov	r0, r3
 675 001c BD46     		mov	sp, r7
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 22


 678 001e 5DF8047B 		ldr	r7, [sp], #4
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 0022 7047     		bx	lr
 682              	.L42:
 683              		.align	2
 684              	.L41:
 685 0024 A05B0040 		.word	1073765280
 686 0028 00000000 		.word	ADC_SAR_0_shift
 687              		.cfi_endproc
 688              	.LFE9:
 689              		.size	ADC_SAR_0_GetResult8, .-ADC_SAR_0_GetResult8
 690              		.section	.text.ADC_SAR_0_GetResult16,"ax",%progbits
 691              		.align	2
 692              		.global	ADC_SAR_0_GetResult16
 693              		.thumb
 694              		.thumb_func
 695              		.type	ADC_SAR_0_GetResult16, %function
 696              	ADC_SAR_0_GetResult16:
 697              	.LFB10:
 521:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 522:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 523:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 524:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_GetResult16
 525:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 526:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 527:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 528:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 529:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  of 8 to 12 bits.
 530:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_IsEndConversion() should be called to verify that the data
 531:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *   sample is ready
 532:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 533:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 534:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 535:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 536:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 537:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  The 16-bit result of the last ADC conversion
 538:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 539:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 540:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_shift - used to convert the ADC counts to the 2s
 541:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  compliment form.
 542:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 543:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Side Effects:
 544:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Converts the ADC counts to the 2s complement form.
 545:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 546:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 547:.\Generated_Source\PSoC5/ADC_SAR_0.c **** int16 ADC_SAR_0_GetResult16( void )
 548:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 698              		.loc 1 548 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 23


 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 549:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uint16 res;
 550:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 551:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     res = CY_GET_REG16(ADC_SAR_0_SAR_WRK_PTR);
 710              		.loc 1 551 0
 711 0006 094B     		ldr	r3, .L45
 712 0008 1B88     		ldrh	r3, [r3]	@ movhi
 713 000a FB80     		strh	r3, [r7, #6]	@ movhi
 552:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 553:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     return( (int16)res - ADC_SAR_0_shift );
 714              		.loc 1 553 0
 715 000c 084B     		ldr	r3, .L45+4
 716 000e 1B88     		ldrh	r3, [r3]	@ movhi
 717 0010 9BB2     		uxth	r3, r3
 718 0012 9BB2     		uxth	r3, r3
 719 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 720 0016 D31A     		subs	r3, r2, r3
 721 0018 9BB2     		uxth	r3, r3
 722 001a 9BB2     		uxth	r3, r3
 723 001c 1BB2     		sxth	r3, r3
 554:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 724              		.loc 1 554 0
 725 001e 1846     		mov	r0, r3
 726 0020 0C37     		adds	r7, r7, #12
 727              		.cfi_def_cfa_offset 4
 728 0022 BD46     		mov	sp, r7
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 0024 5DF8047B 		ldr	r7, [sp], #4
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 0028 7047     		bx	lr
 735              	.L46:
 736 002a 00BF     		.align	2
 737              	.L45:
 738 002c A05B0040 		.word	1073765280
 739 0030 00000000 		.word	ADC_SAR_0_shift
 740              		.cfi_endproc
 741              	.LFE10:
 742              		.size	ADC_SAR_0_GetResult16, .-ADC_SAR_0_GetResult16
 743              		.section	.text.ADC_SAR_0_SetOffset,"ax",%progbits
 744              		.align	2
 745              		.global	ADC_SAR_0_SetOffset
 746              		.thumb
 747              		.thumb_func
 748              		.type	ADC_SAR_0_SetOffset, %function
 749              	ADC_SAR_0_SetOffset:
 750              	.LFB11:
 555:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 556:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 557:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 558:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_SetOffset
 559:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 560:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 561:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 24


 562:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Sets the ADC offset, which is used by ADC_SAR_0_CountsTo_Volts(),
 563:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_CountsTo_mVolts(), and ADC_SAR_0_CountsTo_uVolts()
 564:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  to subtract the offset from the given reading before calculating the voltage
 565:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  conversion.
 566:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 567:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 568:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int16: This value is measured when the inputs are shorted or connected to
 569:.\Generated_Source\PSoC5/ADC_SAR_0.c ****    the same input voltage.
 570:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 571:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 572:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 573:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 574:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 575:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  The ADC_SAR_0_offset variable modified. This variable is used for
 576:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  offset calibration purpose.
 577:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Affects the ADC_SAR_0_CountsTo_Volts,
 578:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_CountsTo_mVolts, ADC_SAR_0_CountsTo_uVolts functions
 579:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  by subtracting the given offset.
 580:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 581:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 582:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_SetOffset(int16 offset)
 583:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 751              		.loc 1 583 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756 0000 80B4     		push	{r7}
 757              		.cfi_def_cfa_offset 4
 758              		.cfi_offset 7, -4
 759 0002 83B0     		sub	sp, sp, #12
 760              		.cfi_def_cfa_offset 16
 761 0004 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
 763 0006 0346     		mov	r3, r0
 764 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 584:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_offset = offset;
 765              		.loc 1 584 0
 766 000a 044A     		ldr	r2, .L48
 767 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 768 000e 1380     		strh	r3, [r2]	@ movhi
 585:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 769              		.loc 1 585 0
 770 0010 0C37     		adds	r7, r7, #12
 771              		.cfi_def_cfa_offset 4
 772 0012 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0014 5DF8047B 		ldr	r7, [sp], #4
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0018 7047     		bx	lr
 779              	.L49:
 780 001a 00BF     		.align	2
 781              	.L48:
 782 001c 00000000 		.word	ADC_SAR_0_offset
 783              		.cfi_endproc
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 25


 784              	.LFE11:
 785              		.size	ADC_SAR_0_SetOffset, .-ADC_SAR_0_SetOffset
 786              		.section	.text.ADC_SAR_0_CalcGain,"ax",%progbits
 787              		.align	2
 788              		.thumb
 789              		.thumb_func
 790              		.type	ADC_SAR_0_CalcGain, %function
 791              	ADC_SAR_0_CalcGain:
 792              	.LFB12:
 586:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 587:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 588:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 589:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_CalcGain
 590:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 591:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 592:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 593:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  This function calculates the ADC gain in counts per 10 volt.
 594:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 595:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 596:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  uint8: resolution
 597:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 598:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 599:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 600:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 601:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 602:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_shift variable initialized. This variable is used to
 603:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  convert the ADC counts to the 2s compliment form.
 604:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_countsPer10Volt variable initialized. This variable is used
 605:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  for gain calibration purpose.
 606:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 607:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 608:.\Generated_Source\PSoC5/ADC_SAR_0.c **** static void ADC_SAR_0_CalcGain( uint8 resolution )
 609:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 793              		.loc 1 609 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 16
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797 0000 80B5     		push	{r7, lr}
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 84B0     		sub	sp, sp, #16
 802              		.cfi_def_cfa_offset 24
 803 0004 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 805 0006 0346     		mov	r3, r0
 806 0008 FB71     		strb	r3, [r7, #7]
 610:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     int32 counts;
 611:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if(!((ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSS_TO_VREF) || \
 612:.\Generated_Source\PSoC5/ADC_SAR_0.c ****          (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDDA) || \
 613:.\Generated_Source\PSoC5/ADC_SAR_0.c ****          (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDAC)) )
 614:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         uint16 diff_zero;
 615:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* End ADC_SAR_0_DEFAULT_RANGE */
 616:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 617:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     switch (resolution)
 807              		.loc 1 617 0
 808 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 26


 809 000c 0A2B     		cmp	r3, #10
 810 000e 08D0     		beq	.L52
 811 0010 0C2B     		cmp	r3, #12
 812 0012 02D0     		beq	.L53
 813 0014 082B     		cmp	r3, #8
 814 0016 08D0     		beq	.L54
 815 0018 0BE0     		b	.L56
 816              	.L53:
 618:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 619:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         case (uint8)ADC_SAR_0__BITS_12:
 620:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             counts = (int32)ADC_SAR_0_SAR_WRK_MAX_12BIT;
 817              		.loc 1 620 0
 818 001a 4FF48053 		mov	r3, #4096
 819 001e FB60     		str	r3, [r7, #12]
 621:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #if(!((ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSS_TO_VREF) || \
 622:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDDA) || \
 623:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDAC)) )
 624:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                 diff_zero = ADC_SAR_0_SAR_DIFF_SHIFT;
 625:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #endif /* End ADC_SAR_0_DEFAULT_RANGE */
 626:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 820              		.loc 1 626 0
 821 0020 0DE0     		b	.L55
 822              	.L52:
 627:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         case (uint8)ADC_SAR_0__BITS_10:
 628:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             counts = (int32)ADC_SAR_0_SAR_WRK_MAX_10BIT;
 823              		.loc 1 628 0
 824 0022 4FF48063 		mov	r3, #1024
 825 0026 FB60     		str	r3, [r7, #12]
 629:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #if(!((ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSS_TO_VREF) || \
 630:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDDA) || \
 631:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDAC)) )
 632:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                 diff_zero = ADC_SAR_0_SAR_DIFF_SHIFT >> 2u;
 633:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #endif /* End ADC_SAR_0_DEFAULT_RANGE */
 634:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 826              		.loc 1 634 0
 827 0028 09E0     		b	.L55
 828              	.L54:
 635:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         case (uint8)ADC_SAR_0__BITS_8:
 636:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             counts = (int32)ADC_SAR_0_SAR_WRK_MAX_8BIT;
 829              		.loc 1 636 0
 830 002a 4FF48073 		mov	r3, #256
 831 002e FB60     		str	r3, [r7, #12]
 637:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #if(!((ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSS_TO_VREF) || \
 638:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDDA) || \
 639:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDAC)) )
 640:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                 diff_zero = ADC_SAR_0_SAR_DIFF_SHIFT >> 4u;
 641:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #endif /* End ADC_SAR_0_DEFAULT_RANGE */
 642:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 832              		.loc 1 642 0
 833 0030 05E0     		b	.L55
 834              	.L56:
 643:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 644:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             counts = 0;
 835              		.loc 1 644 0
 836 0032 0023     		movs	r3, #0
 837 0034 FB60     		str	r3, [r7, #12]
 645:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #if(!((ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSS_TO_VREF) || \
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 27


 646:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDDA) || \
 647:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                  (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDAC)) )
 648:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                 diff_zero = 0u;
 649:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             #endif /* End ADC_SAR_0_DEFAULT_RANGE */
 650:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             CYASSERT(0u != 0u);
 838              		.loc 1 650 0
 839 0036 0020     		movs	r0, #0
 840 0038 FFF7FEFF 		bl	CyHalt
 651:.\Generated_Source\PSoC5/ADC_SAR_0.c ****             break;
 841              		.loc 1 651 0
 842 003c 00BF     		nop
 843              	.L55:
 652:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 653:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_countsPerVolt = 0; /* Clear obsolete variable */
 844              		.loc 1 653 0
 845 003e 0C4B     		ldr	r3, .L57
 846 0040 0022     		movs	r2, #0
 847 0042 1A80     		strh	r2, [r3]	@ movhi
 654:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Calculate gain in counts per 10 volts with rounding */
 655:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_countsPer10Volt = (((counts * ADC_SAR_0_10MV_COUNTS) +
 848              		.loc 1 655 0
 849 0044 FB68     		ldr	r3, [r7, #12]
 850 0046 42F21072 		movw	r2, #10000
 851 004a 02FB03F3 		mul	r3, r2, r3
 852 004e 03F6C413 		addw	r3, r3, #2500
 656:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                         ADC_SAR_0_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_0_DEFAULT_REF_VOLTAGE_MV * 2))
 853              		.loc 1 656 0
 854 0052 084A     		ldr	r2, .L57+4
 855 0054 82FB0312 		smull	r1, r2, r2, r3
 856 0058 D212     		asrs	r2, r2, #11
 857 005a DB17     		asrs	r3, r3, #31
 858 005c D31A     		subs	r3, r2, r3
 655:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                         ADC_SAR_0_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_0_DEFAULT_REF_VOLTAGE_MV * 2))
 859              		.loc 1 655 0
 860 005e 064A     		ldr	r2, .L57+8
 861 0060 1360     		str	r3, [r2]
 657:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 658:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #if( (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSS_TO_VREF) || \
 659:.\Generated_Source\PSoC5/ADC_SAR_0.c ****          (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDDA) || \
 660:.\Generated_Source\PSoC5/ADC_SAR_0.c ****          (ADC_SAR_0_DEFAULT_RANGE == ADC_SAR_0__VSSA_TO_VDAC) )
 661:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_shift = 0;
 862              		.loc 1 661 0
 863 0062 064B     		ldr	r3, .L57+12
 864 0064 0022     		movs	r2, #0
 865 0066 1A80     		strh	r2, [r3]	@ movhi
 662:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #else
 663:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         ADC_SAR_0_shift = diff_zero;
 664:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     #endif /* End ADC_SAR_0_DEFAULT_RANGE */
 665:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 866              		.loc 1 665 0
 867 0068 1037     		adds	r7, r7, #16
 868              		.cfi_def_cfa_offset 8
 869 006a BD46     		mov	sp, r7
 870              		.cfi_def_cfa_register 13
 871              		@ sp needed
 872 006c 80BD     		pop	{r7, pc}
 873              	.L58:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 28


 874 006e 00BF     		.align	2
 875              	.L57:
 876 0070 00000000 		.word	ADC_SAR_0_countsPerVolt
 877 0074 AD8BDB68 		.word	1759218605
 878 0078 00000000 		.word	ADC_SAR_0_countsPer10Volt
 879 007c 00000000 		.word	ADC_SAR_0_shift
 880              		.cfi_endproc
 881              	.LFE12:
 882              		.size	ADC_SAR_0_CalcGain, .-ADC_SAR_0_CalcGain
 883              		.section	.text.ADC_SAR_0_SetGain,"ax",%progbits
 884              		.align	2
 885              		.global	ADC_SAR_0_SetGain
 886              		.thumb
 887              		.thumb_func
 888              		.type	ADC_SAR_0_SetGain, %function
 889              	ADC_SAR_0_SetGain:
 890              	.LFB13:
 666:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 667:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 668:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 669:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_SetGain
 670:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 671:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 672:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 673:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 674:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  that follow. This value is set by default by the reference and input range
 675:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  settings. It should only be used to further calibrate the ADC with a known
 676:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  input or if the ADC is using an external reference.
 677:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 678:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 679:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int16  adcGain  counts per volt
 680:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 681:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 682:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 683:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 684:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 685:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_countsPer10Volt variable modified. This variable is used
 686:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  for gain calibration purpose.
 687:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 688:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_SetGain(int16 adcGain)
 690:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 891              		.loc 1 690 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 8
 894              		@ frame_needed = 1, uses_anonymous_args = 0
 895              		@ link register save eliminated.
 896 0000 80B4     		push	{r7}
 897              		.cfi_def_cfa_offset 4
 898              		.cfi_offset 7, -4
 899 0002 83B0     		sub	sp, sp, #12
 900              		.cfi_def_cfa_offset 16
 901 0004 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
 903 0006 0346     		mov	r3, r0
 904 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 691:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_countsPer10Volt = (int32)adcGain * 10;
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 29


 905              		.loc 1 691 0
 906 000a B7F90620 		ldrsh	r2, [r7, #6]
 907 000e 1346     		mov	r3, r2
 908 0010 9B00     		lsls	r3, r3, #2
 909 0012 1344     		add	r3, r3, r2
 910 0014 5B00     		lsls	r3, r3, #1
 911 0016 1A46     		mov	r2, r3
 912 0018 034B     		ldr	r3, .L60
 913 001a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 914              		.loc 1 692 0
 915 001c 0C37     		adds	r7, r7, #12
 916              		.cfi_def_cfa_offset 4
 917 001e BD46     		mov	sp, r7
 918              		.cfi_def_cfa_register 13
 919              		@ sp needed
 920 0020 5DF8047B 		ldr	r7, [sp], #4
 921              		.cfi_restore 7
 922              		.cfi_def_cfa_offset 0
 923 0024 7047     		bx	lr
 924              	.L61:
 925 0026 00BF     		.align	2
 926              	.L60:
 927 0028 00000000 		.word	ADC_SAR_0_countsPer10Volt
 928              		.cfi_endproc
 929              	.LFE13:
 930              		.size	ADC_SAR_0_SetGain, .-ADC_SAR_0_SetGain
 931              		.section	.text.ADC_SAR_0_SetScaledGain,"ax",%progbits
 932              		.align	2
 933              		.global	ADC_SAR_0_SetScaledGain
 934              		.thumb
 935              		.thumb_func
 936              		.type	ADC_SAR_0_SetScaledGain, %function
 937              	ADC_SAR_0_SetScaledGain:
 938              	.LFB14:
 693:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 694:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 695:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 696:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_SetGainPer10Volt
 697:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 698:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 699:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 700:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 701:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  that follow. This value is set by default by the reference and input range
 702:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  settings. It should only be used to further calibrate the ADC with a known
 703:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  input or if the ADC is using an external reference.
 704:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 705:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 706:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int16  adcGain  counts per 10 volt
 707:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 708:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 709:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  None.
 710:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 711:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 712:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_countsPer10Volt variable modified. This variable is used
 713:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  for gain calibration purpose.
 714:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 30


 715:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 716:.\Generated_Source\PSoC5/ADC_SAR_0.c **** void ADC_SAR_0_SetScaledGain(int32 adcGain)
 717:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 939              		.loc 1 717 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 8
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 83B0     		sub	sp, sp, #12
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
 718:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     ADC_SAR_0_countsPer10Volt = adcGain;
 952              		.loc 1 718 0
 953 0008 034A     		ldr	r2, .L63
 954 000a 7B68     		ldr	r3, [r7, #4]
 955 000c 1360     		str	r3, [r2]
 719:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 956              		.loc 1 719 0
 957 000e 0C37     		adds	r7, r7, #12
 958              		.cfi_def_cfa_offset 4
 959 0010 BD46     		mov	sp, r7
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 0012 5DF8047B 		ldr	r7, [sp], #4
 963              		.cfi_restore 7
 964              		.cfi_def_cfa_offset 0
 965 0016 7047     		bx	lr
 966              	.L64:
 967              		.align	2
 968              	.L63:
 969 0018 00000000 		.word	ADC_SAR_0_countsPer10Volt
 970              		.cfi_endproc
 971              	.LFE14:
 972              		.size	ADC_SAR_0_SetScaledGain, .-ADC_SAR_0_SetScaledGain
 973              		.section	.text.ADC_SAR_0_CountsTo_mVolts,"ax",%progbits
 974              		.align	2
 975              		.global	ADC_SAR_0_CountsTo_mVolts
 976              		.thumb
 977              		.thumb_func
 978              		.type	ADC_SAR_0_CountsTo_mVolts, %function
 979              	ADC_SAR_0_CountsTo_mVolts:
 980              	.LFB15:
 720:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 721:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 722:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 723:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_CountsTo_mVolts
 724:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 725:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 726:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 727:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 728:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 729:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 31


 730:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int16 adcCounts:  Result from the ADC conversion
 731:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 733:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int16 Result in mVolts
 734:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 736:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_offset variable used.
 737:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_countsPer10Volt variable used.
 738:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 739:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 740:.\Generated_Source\PSoC5/ADC_SAR_0.c **** int16 ADC_SAR_0_CountsTo_mVolts(int16 adcCounts)
 741:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 981              		.loc 1 741 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 16
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986 0000 80B4     		push	{r7}
 987              		.cfi_def_cfa_offset 4
 988              		.cfi_offset 7, -4
 989 0002 85B0     		sub	sp, sp, #20
 990              		.cfi_def_cfa_offset 24
 991 0004 00AF     		add	r7, sp, #0
 992              		.cfi_def_cfa_register 7
 993 0006 0346     		mov	r3, r0
 994 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 742:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     int16 mVolts;
 743:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     int32 countsPer10Volt;
 744:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 745:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     if(ADC_SAR_0_countsPerVolt != 0)
 995              		.loc 1 745 0
 996 000a 1D4B     		ldr	r3, .L71
 997 000c 1B88     		ldrh	r3, [r3]	@ movhi
 998 000e 9BB2     		uxth	r3, r3
 999 0010 002B     		cmp	r3, #0
 1000 0012 09D0     		beq	.L66
 746:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {   /* Support obsolete method */
 747:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         countsPer10Volt = (int32)ADC_SAR_0_countsPerVolt * 10;
 1001              		.loc 1 747 0
 1002 0014 1A4B     		ldr	r3, .L71
 1003 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1004 0018 9BB2     		uxth	r3, r3
 1005 001a 1AB2     		sxth	r2, r3
 1006 001c 1346     		mov	r3, r2
 1007 001e 9B00     		lsls	r3, r3, #2
 1008 0020 1344     		add	r3, r3, r2
 1009 0022 5B00     		lsls	r3, r3, #1
 1010 0024 FB60     		str	r3, [r7, #12]
 1011 0026 02E0     		b	.L67
 1012              	.L66:
 748:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 749:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     else
 750:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 751:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         countsPer10Volt = ADC_SAR_0_countsPer10Volt;
 1013              		.loc 1 751 0
 1014 0028 164B     		ldr	r3, .L71+4
 1015 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 32


 1016 002c FB60     		str	r3, [r7, #12]
 1017              	.L67:
 752:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 753:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 754:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Subtract ADC offset */
 755:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     adcCounts -= ADC_SAR_0_offset;
 1018              		.loc 1 755 0
 1019 002e 164B     		ldr	r3, .L71+8
 1020 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1021 0032 9BB2     		uxth	r3, r3
 1022 0034 FA88     		ldrh	r2, [r7, #6]
 1023 0036 9BB2     		uxth	r3, r3
 1024 0038 D31A     		subs	r3, r2, r3
 1025 003a 9BB2     		uxth	r3, r3
 1026 003c FB80     		strh	r3, [r7, #6]	@ movhi
 756:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Convert to millivolts with rounding */
 757:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_0_10MV_COUNTS ) + ( (adcCounts > 0) ?
 1027              		.loc 1 757 0
 1028 003e B7F90630 		ldrsh	r3, [r7, #6]
 1029 0042 42F21072 		movw	r2, #10000
 1030 0046 02FB03F2 		mul	r2, r2, r3
 758:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1031              		.loc 1 758 0
 1032 004a B7F90630 		ldrsh	r3, [r7, #6]
 1033 004e 002B     		cmp	r3, #0
 1034 0050 04DD     		ble	.L68
 1035              		.loc 1 758 0 is_stmt 0 discriminator 1
 1036 0052 FB68     		ldr	r3, [r7, #12]
 1037 0054 D90F     		lsrs	r1, r3, #31
 1038 0056 0B44     		add	r3, r3, r1
 1039 0058 5B10     		asrs	r3, r3, #1
 1040 005a 04E0     		b	.L69
 1041              	.L68:
 1042              		.loc 1 758 0 discriminator 2
 1043 005c FB68     		ldr	r3, [r7, #12]
 1044 005e D90F     		lsrs	r1, r3, #31
 1045 0060 0B44     		add	r3, r3, r1
 1046 0062 5B10     		asrs	r3, r3, #1
 1047 0064 5B42     		negs	r3, r3
 1048              	.L69:
 757:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1049              		.loc 1 757 0 is_stmt 1
 1050 0066 1A44     		add	r2, r2, r3
 1051              		.loc 1 758 0
 1052 0068 FB68     		ldr	r3, [r7, #12]
 1053 006a 92FBF3F3 		sdiv	r3, r2, r3
 757:.\Generated_Source\PSoC5/ADC_SAR_0.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1054              		.loc 1 757 0
 1055 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 759:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 760:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     return( mVolts );
 1056              		.loc 1 760 0
 1057 0070 7B89     		ldrh	r3, [r7, #10]
 1058 0072 1BB2     		sxth	r3, r3
 761:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 1059              		.loc 1 761 0
 1060 0074 1846     		mov	r0, r3
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 33


 1061 0076 1437     		adds	r7, r7, #20
 1062              		.cfi_def_cfa_offset 4
 1063 0078 BD46     		mov	sp, r7
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
 1066 007a 5DF8047B 		ldr	r7, [sp], #4
 1067              		.cfi_restore 7
 1068              		.cfi_def_cfa_offset 0
 1069 007e 7047     		bx	lr
 1070              	.L72:
 1071              		.align	2
 1072              	.L71:
 1073 0080 00000000 		.word	ADC_SAR_0_countsPerVolt
 1074 0084 00000000 		.word	ADC_SAR_0_countsPer10Volt
 1075 0088 00000000 		.word	ADC_SAR_0_offset
 1076              		.cfi_endproc
 1077              	.LFE15:
 1078              		.size	ADC_SAR_0_CountsTo_mVolts, .-ADC_SAR_0_CountsTo_mVolts
 1079              		.global	__aeabi_ldivmod
 1080              		.section	.text.ADC_SAR_0_CountsTo_uVolts,"ax",%progbits
 1081              		.align	2
 1082              		.global	ADC_SAR_0_CountsTo_uVolts
 1083              		.thumb
 1084              		.thumb_func
 1085              		.type	ADC_SAR_0_CountsTo_uVolts, %function
 1086              	ADC_SAR_0_CountsTo_uVolts:
 1087              	.LFB16:
 762:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 763:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 764:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 765:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_CountsTo_uVolts
 766:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 767:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 768:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 769:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 770:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 771:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 772:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int16 adcCounts: Result from the ADC conversion
 773:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 774:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 775:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int32 Result in micro Volts
 776:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 777:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 778:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_offset variable used.
 779:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_countsPer10Volt used to convert ADC counts to uVolts.
 780:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 781:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 782:.\Generated_Source\PSoC5/ADC_SAR_0.c **** int32 ADC_SAR_0_CountsTo_uVolts(int16 adcCounts)
 783:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 1088              		.loc 1 783 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 24
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092 0000 B0B5     		push	{r4, r5, r7, lr}
 1093              		.cfi_def_cfa_offset 16
 1094              		.cfi_offset 4, -16
 1095              		.cfi_offset 5, -12
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 34


 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 86B0     		sub	sp, sp, #24
 1099              		.cfi_def_cfa_offset 40
 1100 0004 00AF     		add	r7, sp, #0
 1101              		.cfi_def_cfa_register 7
 1102 0006 0346     		mov	r3, r0
 1103 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 784:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 785:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     int64 uVolts;
 786:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     int32 countsPer10Volt;
 787:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 788:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     if(ADC_SAR_0_countsPerVolt != 0)
 1104              		.loc 1 788 0
 1105 000a 1E4B     		ldr	r3, .L77
 1106 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1107 000e 9BB2     		uxth	r3, r3
 1108 0010 002B     		cmp	r3, #0
 1109 0012 09D0     		beq	.L74
 789:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {   /* Support obsolete method */
 790:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         countsPer10Volt = (int32)ADC_SAR_0_countsPerVolt * 10;
 1110              		.loc 1 790 0
 1111 0014 1B4B     		ldr	r3, .L77
 1112 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1113 0018 9BB2     		uxth	r3, r3
 1114 001a 1AB2     		sxth	r2, r3
 1115 001c 1346     		mov	r3, r2
 1116 001e 9B00     		lsls	r3, r3, #2
 1117 0020 1344     		add	r3, r3, r2
 1118 0022 5B00     		lsls	r3, r3, #1
 1119 0024 7B61     		str	r3, [r7, #20]
 1120 0026 02E0     		b	.L75
 1121              	.L74:
 791:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 792:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     else
 793:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 794:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         countsPer10Volt = ADC_SAR_0_countsPer10Volt;
 1122              		.loc 1 794 0
 1123 0028 174B     		ldr	r3, .L77+4
 1124 002a 1B68     		ldr	r3, [r3]
 1125 002c 7B61     		str	r3, [r7, #20]
 1126              	.L75:
 795:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 796:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 797:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Subtract ADC offset */
 798:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     adcCounts -= ADC_SAR_0_offset;
 1127              		.loc 1 798 0
 1128 002e 174B     		ldr	r3, .L77+8
 1129 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1130 0032 9BB2     		uxth	r3, r3
 1131 0034 FA88     		ldrh	r2, [r7, #6]
 1132 0036 9BB2     		uxth	r3, r3
 1133 0038 D31A     		subs	r3, r2, r3
 1134 003a 9BB2     		uxth	r3, r3
 1135 003c FB80     		strh	r3, [r7, #6]	@ movhi
 799:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 800:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     *  on 10 million and later divide on gain in counts per 10V.
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 35


 801:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     */
 802:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_0_10UV_COUNTS ) / countsPer10Volt);
 1136              		.loc 1 802 0
 1137 003e B7F90620 		ldrsh	r2, [r7, #6]
 1138 0042 4FEAE273 		asr	r3, r2, #31
 1139 0046 1249     		ldr	r1, .L77+12
 1140 0048 01FB03F0 		mul	r0, r1, r3
 1141 004c 0021     		movs	r1, #0
 1142 004e 01FB02F1 		mul	r1, r1, r2
 1143 0052 0144     		add	r1, r1, r0
 1144 0054 0E48     		ldr	r0, .L77+12
 1145 0056 A2FB0023 		umull	r2, r3, r2, r0
 1146 005a 1944     		add	r1, r1, r3
 1147 005c 0B46     		mov	r3, r1
 1148 005e 7969     		ldr	r1, [r7, #20]
 1149 0060 0C46     		mov	r4, r1
 1150 0062 4FEAE475 		asr	r5, r4, #31
 1151 0066 1046     		mov	r0, r2
 1152 0068 1946     		mov	r1, r3
 1153 006a 2246     		mov	r2, r4
 1154 006c 2B46     		mov	r3, r5
 1155 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1156 0072 0246     		mov	r2, r0
 1157 0074 0B46     		mov	r3, r1
 1158 0076 C7E90223 		strd	r2, [r7, #8]
 803:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 804:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     return( uVolts );
 1159              		.loc 1 804 0
 1160 007a BB68     		ldr	r3, [r7, #8]
 805:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 1161              		.loc 1 805 0
 1162 007c 1846     		mov	r0, r3
 1163 007e 1837     		adds	r7, r7, #24
 1164              		.cfi_def_cfa_offset 16
 1165 0080 BD46     		mov	sp, r7
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0082 B0BD     		pop	{r4, r5, r7, pc}
 1169              	.L78:
 1170              		.align	2
 1171              	.L77:
 1172 0084 00000000 		.word	ADC_SAR_0_countsPerVolt
 1173 0088 00000000 		.word	ADC_SAR_0_countsPer10Volt
 1174 008c 00000000 		.word	ADC_SAR_0_offset
 1175 0090 80969800 		.word	10000000
 1176              		.cfi_endproc
 1177              	.LFE16:
 1178              		.size	ADC_SAR_0_CountsTo_uVolts, .-ADC_SAR_0_CountsTo_uVolts
 1179              		.global	__aeabi_i2f
 1180              		.global	__aeabi_fmul
 1181              		.global	__aeabi_fdiv
 1182              		.section	.text.ADC_SAR_0_CountsTo_Volts,"ax",%progbits
 1183              		.align	2
 1184              		.global	ADC_SAR_0_CountsTo_Volts
 1185              		.thumb
 1186              		.thumb_func
 1187              		.type	ADC_SAR_0_CountsTo_Volts, %function
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 36


 1188              	ADC_SAR_0_CountsTo_Volts:
 1189              	.LFB17:
 806:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 807:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 808:.\Generated_Source\PSoC5/ADC_SAR_0.c **** /*******************************************************************************
 809:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Function Name: ADC_SAR_0_CountsTo_Volts
 810:.\Generated_Source\PSoC5/ADC_SAR_0.c **** ********************************************************************************
 811:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 812:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Summary:
 813:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  Converts the ADC output to volts as a floating-point number.
 814:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 815:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Parameters:
 816:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  int16 adcCounts: Result from the ADC conversion
 817:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 818:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Return:
 819:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  float Result in Volts
 820:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 821:.\Generated_Source\PSoC5/ADC_SAR_0.c **** * Global Variables:
 822:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_offset variable used.
 823:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *  ADC_SAR_0_countsPer10Volt used to convert ADC counts to Volts.
 824:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *
 825:.\Generated_Source\PSoC5/ADC_SAR_0.c **** *******************************************************************************/
 826:.\Generated_Source\PSoC5/ADC_SAR_0.c **** float32 ADC_SAR_0_CountsTo_Volts(int16 adcCounts)
 827:.\Generated_Source\PSoC5/ADC_SAR_0.c **** {
 1190              		.loc 1 827 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 16
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 90B5     		push	{r4, r7, lr}
 1195              		.cfi_def_cfa_offset 12
 1196              		.cfi_offset 4, -12
 1197              		.cfi_offset 7, -8
 1198              		.cfi_offset 14, -4
 1199 0002 85B0     		sub	sp, sp, #20
 1200              		.cfi_def_cfa_offset 32
 1201 0004 00AF     		add	r7, sp, #0
 1202              		.cfi_def_cfa_register 7
 1203 0006 0346     		mov	r3, r0
 1204 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 828:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     float32 volts;
 829:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     int32 countsPer10Volt;
 830:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 831:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     if(ADC_SAR_0_countsPerVolt != 0)
 1205              		.loc 1 831 0
 1206 000a 1A4B     		ldr	r3, .L83
 1207 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1208 000e 9BB2     		uxth	r3, r3
 1209 0010 002B     		cmp	r3, #0
 1210 0012 09D0     		beq	.L80
 832:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {   /* Support obsolete method */
 833:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         countsPer10Volt = (int32)ADC_SAR_0_countsPerVolt * 10;
 1211              		.loc 1 833 0
 1212 0014 174B     		ldr	r3, .L83
 1213 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1214 0018 9BB2     		uxth	r3, r3
 1215 001a 1AB2     		sxth	r2, r3
 1216 001c 1346     		mov	r3, r2
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 37


 1217 001e 9B00     		lsls	r3, r3, #2
 1218 0020 1344     		add	r3, r3, r2
 1219 0022 5B00     		lsls	r3, r3, #1
 1220 0024 FB60     		str	r3, [r7, #12]
 1221 0026 02E0     		b	.L81
 1222              	.L80:
 834:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 835:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     else
 836:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     {
 837:.\Generated_Source\PSoC5/ADC_SAR_0.c ****         countsPer10Volt = ADC_SAR_0_countsPer10Volt;
 1223              		.loc 1 837 0
 1224 0028 134B     		ldr	r3, .L83+4
 1225 002a 1B68     		ldr	r3, [r3]
 1226 002c FB60     		str	r3, [r7, #12]
 1227              	.L81:
 838:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     }
 839:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 840:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     /* Subtract ADC offset */
 841:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     adcCounts -= ADC_SAR_0_offset;
 1228              		.loc 1 841 0
 1229 002e 134B     		ldr	r3, .L83+8
 1230 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1231 0032 9BB2     		uxth	r3, r3
 1232 0034 FA88     		ldrh	r2, [r7, #6]
 1233 0036 9BB2     		uxth	r3, r3
 1234 0038 D31A     		subs	r3, r2, r3
 1235 003a 9BB2     		uxth	r3, r3
 1236 003c FB80     		strh	r3, [r7, #6]	@ movhi
 842:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 843:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     volts = ((float32)adcCounts * ADC_SAR_0_10V_COUNTS) / (float32)countsPer10Volt;
 1237              		.loc 1 843 0
 1238 003e B7F90630 		ldrsh	r3, [r7, #6]
 1239 0042 1846     		mov	r0, r3
 1240 0044 FFF7FEFF 		bl	__aeabi_i2f
 1241 0048 0346     		mov	r3, r0
 1242 004a 1846     		mov	r0, r3
 1243 004c 0C49     		ldr	r1, .L83+12
 1244 004e FFF7FEFF 		bl	__aeabi_fmul
 1245 0052 0346     		mov	r3, r0
 1246 0054 1C46     		mov	r4, r3
 1247 0056 F868     		ldr	r0, [r7, #12]
 1248 0058 FFF7FEFF 		bl	__aeabi_i2f
 1249 005c 0346     		mov	r3, r0
 1250 005e 2046     		mov	r0, r4
 1251 0060 1946     		mov	r1, r3
 1252 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1253 0066 0346     		mov	r3, r0
 1254 0068 BB60     		str	r3, [r7, #8]	@ float
 844:.\Generated_Source\PSoC5/ADC_SAR_0.c **** 
 845:.\Generated_Source\PSoC5/ADC_SAR_0.c ****     return( volts );
 1255              		.loc 1 845 0
 1256 006a BB68     		ldr	r3, [r7, #8]	@ float
 846:.\Generated_Source\PSoC5/ADC_SAR_0.c **** }
 1257              		.loc 1 846 0
 1258 006c 1846     		mov	r0, r3
 1259 006e 1437     		adds	r7, r7, #20
 1260              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 38


 1261 0070 BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 0072 90BD     		pop	{r4, r7, pc}
 1265              	.L84:
 1266              		.align	2
 1267              	.L83:
 1268 0074 00000000 		.word	ADC_SAR_0_countsPerVolt
 1269 0078 00000000 		.word	ADC_SAR_0_countsPer10Volt
 1270 007c 00000000 		.word	ADC_SAR_0_offset
 1271 0080 00002041 		.word	1092616192
 1272              		.cfi_endproc
 1273              	.LFE17:
 1274              		.size	ADC_SAR_0_CountsTo_Volts, .-ADC_SAR_0_CountsTo_Volts
 1275              		.text
 1276              	.Letext0:
 1277              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1278              		.section	.debug_info,"",%progbits
 1279              	.Ldebug_info0:
 1280 0000 69040000 		.4byte	0x469
 1281 0004 0400     		.2byte	0x4
 1282 0006 00000000 		.4byte	.Ldebug_abbrev0
 1283 000a 04       		.byte	0x4
 1284 000b 01       		.uleb128 0x1
 1285 000c 38020000 		.4byte	.LASF59
 1286 0010 01       		.byte	0x1
 1287 0011 2B010000 		.4byte	.LASF60
 1288 0015 98000000 		.4byte	.LASF61
 1289 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1290 001d 00000000 		.4byte	0
 1291 0021 00000000 		.4byte	.Ldebug_line0
 1292 0025 02       		.uleb128 0x2
 1293 0026 04       		.byte	0x4
 1294 0027 05       		.byte	0x5
 1295 0028 696E7400 		.ascii	"int\000"
 1296 002c 03       		.uleb128 0x3
 1297 002d 04       		.byte	0x4
 1298 002e 07       		.byte	0x7
 1299 002f A3010000 		.4byte	.LASF0
 1300 0033 03       		.uleb128 0x3
 1301 0034 01       		.byte	0x1
 1302 0035 06       		.byte	0x6
 1303 0036 CF000000 		.4byte	.LASF1
 1304 003a 03       		.uleb128 0x3
 1305 003b 01       		.byte	0x1
 1306 003c 08       		.byte	0x8
 1307 003d 02030000 		.4byte	.LASF2
 1308 0041 03       		.uleb128 0x3
 1309 0042 02       		.byte	0x2
 1310 0043 05       		.byte	0x5
 1311 0044 25030000 		.4byte	.LASF3
 1312 0048 03       		.uleb128 0x3
 1313 0049 02       		.byte	0x2
 1314 004a 07       		.byte	0x7
 1315 004b CF010000 		.4byte	.LASF4
 1316 004f 03       		.uleb128 0x3
 1317 0050 04       		.byte	0x4
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 39


 1318 0051 05       		.byte	0x5
 1319 0052 F7000000 		.4byte	.LASF5
 1320 0056 03       		.uleb128 0x3
 1321 0057 04       		.byte	0x4
 1322 0058 07       		.byte	0x7
 1323 0059 B7010000 		.4byte	.LASF6
 1324 005d 03       		.uleb128 0x3
 1325 005e 08       		.byte	0x8
 1326 005f 05       		.byte	0x5
 1327 0060 C1000000 		.4byte	.LASF7
 1328 0064 03       		.uleb128 0x3
 1329 0065 08       		.byte	0x8
 1330 0066 07       		.byte	0x7
 1331 0067 6A000000 		.4byte	.LASF8
 1332 006b 03       		.uleb128 0x3
 1333 006c 04       		.byte	0x4
 1334 006d 07       		.byte	0x7
 1335 006e 2F020000 		.4byte	.LASF9
 1336 0072 03       		.uleb128 0x3
 1337 0073 01       		.byte	0x1
 1338 0074 08       		.byte	0x8
 1339 0075 52030000 		.4byte	.LASF10
 1340 0079 04       		.uleb128 0x4
 1341 007a 1E010000 		.4byte	.LASF11
 1342 007e 02       		.byte	0x2
 1343 007f 5B       		.byte	0x5b
 1344 0080 3A000000 		.4byte	0x3a
 1345 0084 04       		.uleb128 0x4
 1346 0085 00000000 		.4byte	.LASF12
 1347 0089 02       		.byte	0x2
 1348 008a 5C       		.byte	0x5c
 1349 008b 48000000 		.4byte	0x48
 1350 008f 04       		.uleb128 0x4
 1351 0090 6A010000 		.4byte	.LASF13
 1352 0094 02       		.byte	0x2
 1353 0095 5D       		.byte	0x5d
 1354 0096 56000000 		.4byte	0x56
 1355 009a 04       		.uleb128 0x4
 1356 009b E2010000 		.4byte	.LASF14
 1357 009f 02       		.byte	0x2
 1358 00a0 5E       		.byte	0x5e
 1359 00a1 33000000 		.4byte	0x33
 1360 00a5 04       		.uleb128 0x4
 1361 00a6 D3030000 		.4byte	.LASF15
 1362 00aa 02       		.byte	0x2
 1363 00ab 5F       		.byte	0x5f
 1364 00ac 41000000 		.4byte	0x41
 1365 00b0 04       		.uleb128 0x4
 1366 00b1 F1000000 		.4byte	.LASF16
 1367 00b5 02       		.byte	0x2
 1368 00b6 60       		.byte	0x60
 1369 00b7 4F000000 		.4byte	0x4f
 1370 00bb 04       		.uleb128 0x4
 1371 00bc 16020000 		.4byte	.LASF17
 1372 00c0 02       		.byte	0x2
 1373 00c1 61       		.byte	0x61
 1374 00c2 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 40


 1375 00c6 03       		.uleb128 0x3
 1376 00c7 04       		.byte	0x4
 1377 00c8 04       		.byte	0x4
 1378 00c9 F1020000 		.4byte	.LASF18
 1379 00cd 03       		.uleb128 0x3
 1380 00ce 08       		.byte	0x8
 1381 00cf 04       		.byte	0x4
 1382 00d0 24010000 		.4byte	.LASF19
 1383 00d4 04       		.uleb128 0x4
 1384 00d5 D5020000 		.4byte	.LASF20
 1385 00d9 02       		.byte	0x2
 1386 00da 66       		.byte	0x66
 1387 00db 5D000000 		.4byte	0x5d
 1388 00df 04       		.uleb128 0x4
 1389 00e0 FD020000 		.4byte	.LASF21
 1390 00e4 02       		.byte	0x2
 1391 00e5 F0       		.byte	0xf0
 1392 00e6 EA000000 		.4byte	0xea
 1393 00ea 05       		.uleb128 0x5
 1394 00eb 79000000 		.4byte	0x79
 1395 00ef 04       		.uleb128 0x4
 1396 00f0 18010000 		.4byte	.LASF22
 1397 00f4 02       		.byte	0x2
 1398 00f5 F1       		.byte	0xf1
 1399 00f6 FA000000 		.4byte	0xfa
 1400 00fa 05       		.uleb128 0x5
 1401 00fb 84000000 		.4byte	0x84
 1402 00ff 04       		.uleb128 0x4
 1403 0100 10020000 		.4byte	.LASF23
 1404 0104 02       		.byte	0x2
 1405 0105 F2       		.byte	0xf2
 1406 0106 0A010000 		.4byte	0x10a
 1407 010a 05       		.uleb128 0x5
 1408 010b 8F000000 		.4byte	0x8f
 1409 010f 06       		.uleb128 0x6
 1410 0110 5A000000 		.4byte	.LASF24
 1411 0114 01       		.byte	0x1
 1412 0115 4A       		.byte	0x4a
 1413 0116 00000000 		.4byte	.LFB0
 1414 011a 20000000 		.4byte	.LFE0-.LFB0
 1415 011e 01       		.uleb128 0x1
 1416 011f 9C       		.byte	0x9c
 1417 0120 06       		.uleb128 0x6
 1418 0121 E0030000 		.4byte	.LASF25
 1419 0125 01       		.byte	0x1
 1420 0126 6A       		.byte	0x6a
 1421 0127 00000000 		.4byte	.LFB1
 1422 012b 44000000 		.4byte	.LFE1-.LFB1
 1423 012f 01       		.uleb128 0x1
 1424 0130 9C       		.byte	0x9c
 1425 0131 07       		.uleb128 0x7
 1426 0132 09040000 		.4byte	.LASF28
 1427 0136 01       		.byte	0x1
 1428 0137 8F       		.byte	0x8f
 1429 0138 00000000 		.4byte	.LFB2
 1430 013c F4000000 		.4byte	.LFE2-.LFB2
 1431 0140 01       		.uleb128 0x1
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 41


 1432 0141 9C       		.byte	0x9c
 1433 0142 63010000 		.4byte	0x163
 1434 0146 08       		.uleb128 0x8
 1435 0147 D9030000 		.4byte	.LASF26
 1436 014b 01       		.byte	0x1
 1437 014c 91       		.byte	0x91
 1438 014d 79000000 		.4byte	0x79
 1439 0151 02       		.uleb128 0x2
 1440 0152 91       		.byte	0x91
 1441 0153 76       		.sleb128 -10
 1442 0154 08       		.uleb128 0x8
 1443 0155 8E030000 		.4byte	.LASF27
 1444 0159 01       		.byte	0x1
 1445 015a 92       		.byte	0x92
 1446 015b 79000000 		.4byte	0x79
 1447 015f 02       		.uleb128 0x2
 1448 0160 91       		.byte	0x91
 1449 0161 77       		.sleb128 -9
 1450 0162 00       		.byte	0
 1451 0163 07       		.uleb128 0x7
 1452 0164 C6020000 		.4byte	.LASF29
 1453 0168 01       		.byte	0x1
 1454 0169 F5       		.byte	0xf5
 1455 016a 00000000 		.4byte	.LFB3
 1456 016e 80000000 		.4byte	.LFE3-.LFB3
 1457 0172 01       		.uleb128 0x1
 1458 0173 9C       		.byte	0x9c
 1459 0174 87010000 		.4byte	0x187
 1460 0178 08       		.uleb128 0x8
 1461 0179 8E030000 		.4byte	.LASF27
 1462 017d 01       		.byte	0x1
 1463 017e F7       		.byte	0xf7
 1464 017f 79000000 		.4byte	0x79
 1465 0183 02       		.uleb128 0x2
 1466 0184 91       		.byte	0x91
 1467 0185 77       		.sleb128 -9
 1468 0186 00       		.byte	0
 1469 0187 09       		.uleb128 0x9
 1470 0188 A6030000 		.4byte	.LASF30
 1471 018c 01       		.byte	0x1
 1472 018d 1F01     		.2byte	0x11f
 1473 018f 00000000 		.4byte	.LFB4
 1474 0193 40000000 		.4byte	.LFE4-.LFB4
 1475 0197 01       		.uleb128 0x1
 1476 0198 9C       		.byte	0x9c
 1477 0199 BC010000 		.4byte	0x1bc
 1478 019d 0A       		.uleb128 0xa
 1479 019e F7020000 		.4byte	.LASF32
 1480 01a2 01       		.byte	0x1
 1481 01a3 1F01     		.2byte	0x11f
 1482 01a5 79000000 		.4byte	0x79
 1483 01a9 02       		.uleb128 0x2
 1484 01aa 91       		.byte	0x91
 1485 01ab 6F       		.sleb128 -17
 1486 01ac 0B       		.uleb128 0xb
 1487 01ad D9030000 		.4byte	.LASF26
 1488 01b1 01       		.byte	0x1
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 42


 1489 01b2 2101     		.2byte	0x121
 1490 01b4 79000000 		.4byte	0x79
 1491 01b8 02       		.uleb128 0x2
 1492 01b9 91       		.byte	0x91
 1493 01ba 77       		.sleb128 -9
 1494 01bb 00       		.byte	0
 1495 01bc 0C       		.uleb128 0xc
 1496 01bd 42000000 		.4byte	.LASF31
 1497 01c1 01       		.byte	0x1
 1498 01c2 5101     		.2byte	0x151
 1499 01c4 00000000 		.4byte	.LFB5
 1500 01c8 50000000 		.4byte	.LFE5-.LFB5
 1501 01cc 01       		.uleb128 0x1
 1502 01cd 9C       		.byte	0x9c
 1503 01ce F1010000 		.4byte	0x1f1
 1504 01d2 0A       		.uleb128 0xa
 1505 01d3 47030000 		.4byte	.LASF33
 1506 01d7 01       		.byte	0x1
 1507 01d8 5101     		.2byte	0x151
 1508 01da 79000000 		.4byte	0x79
 1509 01de 02       		.uleb128 0x2
 1510 01df 91       		.byte	0x91
 1511 01e0 6F       		.sleb128 -17
 1512 01e1 0B       		.uleb128 0xb
 1513 01e2 D9030000 		.4byte	.LASF26
 1514 01e6 01       		.byte	0x1
 1515 01e7 5301     		.2byte	0x153
 1516 01e9 79000000 		.4byte	0x79
 1517 01ed 02       		.uleb128 0x2
 1518 01ee 91       		.byte	0x91
 1519 01ef 77       		.sleb128 -9
 1520 01f0 00       		.byte	0
 1521 01f1 0D       		.uleb128 0xd
 1522 01f2 81000000 		.4byte	.LASF34
 1523 01f6 01       		.byte	0x1
 1524 01f7 8E01     		.2byte	0x18e
 1525 01f9 00000000 		.4byte	.LFB6
 1526 01fd 20000000 		.4byte	.LFE6-.LFB6
 1527 0201 01       		.uleb128 0x1
 1528 0202 9C       		.byte	0x9c
 1529 0203 0D       		.uleb128 0xd
 1530 0204 DB020000 		.4byte	.LASF35
 1531 0208 01       		.byte	0x1
 1532 0209 B001     		.2byte	0x1b0
 1533 020b 00000000 		.4byte	.LFB7
 1534 020f 20000000 		.4byte	.LFE7-.LFB7
 1535 0213 01       		.uleb128 0x1
 1536 0214 9C       		.byte	0x9c
 1537 0215 0E       		.uleb128 0xe
 1538 0216 B9030000 		.4byte	.LASF38
 1539 021a 01       		.byte	0x1
 1540 021b D801     		.2byte	0x1d8
 1541 021d 79000000 		.4byte	0x79
 1542 0221 00000000 		.4byte	.LFB8
 1543 0225 40000000 		.4byte	.LFE8-.LFB8
 1544 0229 01       		.uleb128 0x1
 1545 022a 9C       		.byte	0x9c
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 43


 1546 022b 4E020000 		.4byte	0x24e
 1547 022f 0A       		.uleb128 0xa
 1548 0230 81010000 		.4byte	.LASF36
 1549 0234 01       		.byte	0x1
 1550 0235 D801     		.2byte	0x1d8
 1551 0237 79000000 		.4byte	0x79
 1552 023b 02       		.uleb128 0x2
 1553 023c 91       		.byte	0x91
 1554 023d 6F       		.sleb128 -17
 1555 023e 0B       		.uleb128 0xb
 1556 023f 9F030000 		.4byte	.LASF37
 1557 0243 01       		.byte	0x1
 1558 0244 DA01     		.2byte	0x1da
 1559 0246 79000000 		.4byte	0x79
 1560 024a 02       		.uleb128 0x2
 1561 024b 91       		.byte	0x91
 1562 024c 77       		.sleb128 -9
 1563 024d 00       		.byte	0
 1564 024e 0F       		.uleb128 0xf
 1565 024f 10030000 		.4byte	.LASF62
 1566 0253 01       		.byte	0x1
 1567 0254 0502     		.2byte	0x205
 1568 0256 9A000000 		.4byte	0x9a
 1569 025a 00000000 		.4byte	.LFB9
 1570 025e 2C000000 		.4byte	.LFE9-.LFB9
 1571 0262 01       		.uleb128 0x1
 1572 0263 9C       		.byte	0x9c
 1573 0264 10       		.uleb128 0x10
 1574 0265 DB000000 		.4byte	.LASF39
 1575 0269 01       		.byte	0x1
 1576 026a 2302     		.2byte	0x223
 1577 026c A5000000 		.4byte	0xa5
 1578 0270 00000000 		.4byte	.LFB10
 1579 0274 34000000 		.4byte	.LFE10-.LFB10
 1580 0278 01       		.uleb128 0x1
 1581 0279 9C       		.byte	0x9c
 1582 027a 8E020000 		.4byte	0x28e
 1583 027e 11       		.uleb128 0x11
 1584 027f 72657300 		.ascii	"res\000"
 1585 0283 01       		.byte	0x1
 1586 0284 2502     		.2byte	0x225
 1587 0286 84000000 		.4byte	0x84
 1588 028a 02       		.uleb128 0x2
 1589 028b 91       		.byte	0x91
 1590 028c 76       		.sleb128 -10
 1591 028d 00       		.byte	0
 1592 028e 09       		.uleb128 0x9
 1593 028f 70030000 		.4byte	.LASF40
 1594 0293 01       		.byte	0x1
 1595 0294 4602     		.2byte	0x246
 1596 0296 00000000 		.4byte	.LFB11
 1597 029a 20000000 		.4byte	.LFE11-.LFB11
 1598 029e 01       		.uleb128 0x1
 1599 029f 9C       		.byte	0x9c
 1600 02a0 B4020000 		.4byte	0x2b4
 1601 02a4 0A       		.uleb128 0xa
 1602 02a5 57030000 		.4byte	.LASF41
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 44


 1603 02a9 01       		.byte	0x1
 1604 02aa 4602     		.2byte	0x246
 1605 02ac A5000000 		.4byte	0xa5
 1606 02b0 02       		.uleb128 0x2
 1607 02b1 91       		.byte	0x91
 1608 02b2 76       		.sleb128 -10
 1609 02b3 00       		.byte	0
 1610 02b4 12       		.uleb128 0x12
 1611 02b5 16000000 		.4byte	.LASF63
 1612 02b9 01       		.byte	0x1
 1613 02ba 6002     		.2byte	0x260
 1614 02bc 00000000 		.4byte	.LFB12
 1615 02c0 80000000 		.4byte	.LFE12-.LFB12
 1616 02c4 01       		.uleb128 0x1
 1617 02c5 9C       		.byte	0x9c
 1618 02c6 E9020000 		.4byte	0x2e9
 1619 02ca 0A       		.uleb128 0xa
 1620 02cb 47030000 		.4byte	.LASF33
 1621 02cf 01       		.byte	0x1
 1622 02d0 6002     		.2byte	0x260
 1623 02d2 79000000 		.4byte	0x79
 1624 02d6 02       		.uleb128 0x2
 1625 02d7 91       		.byte	0x91
 1626 02d8 6F       		.sleb128 -17
 1627 02d9 0B       		.uleb128 0xb
 1628 02da 0F000000 		.4byte	.LASF42
 1629 02de 01       		.byte	0x1
 1630 02df 6202     		.2byte	0x262
 1631 02e1 B0000000 		.4byte	0xb0
 1632 02e5 02       		.uleb128 0x2
 1633 02e6 91       		.byte	0x91
 1634 02e7 74       		.sleb128 -12
 1635 02e8 00       		.byte	0
 1636 02e9 09       		.uleb128 0x9
 1637 02ea 5E030000 		.4byte	.LASF43
 1638 02ee 01       		.byte	0x1
 1639 02ef B102     		.2byte	0x2b1
 1640 02f1 00000000 		.4byte	.LFB13
 1641 02f5 2C000000 		.4byte	.LFE13-.LFB13
 1642 02f9 01       		.uleb128 0x1
 1643 02fa 9C       		.byte	0x9c
 1644 02fb 0F030000 		.4byte	0x30f
 1645 02ff 0A       		.uleb128 0xa
 1646 0300 07000000 		.4byte	.LASF44
 1647 0304 01       		.byte	0x1
 1648 0305 B102     		.2byte	0x2b1
 1649 0307 A5000000 		.4byte	0xa5
 1650 030b 02       		.uleb128 0x2
 1651 030c 91       		.byte	0x91
 1652 030d 76       		.sleb128 -10
 1653 030e 00       		.byte	0
 1654 030f 09       		.uleb128 0x9
 1655 0310 00010000 		.4byte	.LASF45
 1656 0314 01       		.byte	0x1
 1657 0315 CC02     		.2byte	0x2cc
 1658 0317 00000000 		.4byte	.LFB14
 1659 031b 1C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 45


 1660 031f 01       		.uleb128 0x1
 1661 0320 9C       		.byte	0x9c
 1662 0321 35030000 		.4byte	0x335
 1663 0325 0A       		.uleb128 0xa
 1664 0326 07000000 		.4byte	.LASF44
 1665 032a 01       		.byte	0x1
 1666 032b CC02     		.2byte	0x2cc
 1667 032d B0000000 		.4byte	0xb0
 1668 0331 02       		.uleb128 0x2
 1669 0332 91       		.byte	0x91
 1670 0333 74       		.sleb128 -12
 1671 0334 00       		.byte	0
 1672 0335 10       		.uleb128 0x10
 1673 0336 EF030000 		.4byte	.LASF46
 1674 033a 01       		.byte	0x1
 1675 033b E402     		.2byte	0x2e4
 1676 033d A5000000 		.4byte	0xa5
 1677 0341 00000000 		.4byte	.LFB15
 1678 0345 8C000000 		.4byte	.LFE15-.LFB15
 1679 0349 01       		.uleb128 0x1
 1680 034a 9C       		.byte	0x9c
 1681 034b 7D030000 		.4byte	0x37d
 1682 034f 0A       		.uleb128 0xa
 1683 0350 84030000 		.4byte	.LASF47
 1684 0354 01       		.byte	0x1
 1685 0355 E402     		.2byte	0x2e4
 1686 0357 A5000000 		.4byte	0xa5
 1687 035b 02       		.uleb128 0x2
 1688 035c 91       		.byte	0x91
 1689 035d 6E       		.sleb128 -18
 1690 035e 0B       		.uleb128 0xb
 1691 035f E7010000 		.4byte	.LASF48
 1692 0363 01       		.byte	0x1
 1693 0364 E602     		.2byte	0x2e6
 1694 0366 A5000000 		.4byte	0xa5
 1695 036a 02       		.uleb128 0x2
 1696 036b 91       		.byte	0x91
 1697 036c 72       		.sleb128 -14
 1698 036d 0B       		.uleb128 0xb
 1699 036e 71010000 		.4byte	.LASF49
 1700 0372 01       		.byte	0x1
 1701 0373 E702     		.2byte	0x2e7
 1702 0375 B0000000 		.4byte	0xb0
 1703 0379 02       		.uleb128 0x2
 1704 037a 91       		.byte	0x91
 1705 037b 74       		.sleb128 -12
 1706 037c 00       		.byte	0
 1707 037d 0E       		.uleb128 0xe
 1708 037e 89010000 		.4byte	.LASF50
 1709 0382 01       		.byte	0x1
 1710 0383 0E03     		.2byte	0x30e
 1711 0385 B0000000 		.4byte	0xb0
 1712 0389 00000000 		.4byte	.LFB16
 1713 038d 94000000 		.4byte	.LFE16-.LFB16
 1714 0391 01       		.uleb128 0x1
 1715 0392 9C       		.byte	0x9c
 1716 0393 C5030000 		.4byte	0x3c5
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 46


 1717 0397 0A       		.uleb128 0xa
 1718 0398 84030000 		.4byte	.LASF47
 1719 039c 01       		.byte	0x1
 1720 039d 0E03     		.2byte	0x30e
 1721 039f A5000000 		.4byte	0xa5
 1722 03a3 02       		.uleb128 0x2
 1723 03a4 91       		.byte	0x91
 1724 03a5 5E       		.sleb128 -34
 1725 03a6 0B       		.uleb128 0xb
 1726 03a7 B0010000 		.4byte	.LASF51
 1727 03ab 01       		.byte	0x1
 1728 03ac 1103     		.2byte	0x311
 1729 03ae D4000000 		.4byte	0xd4
 1730 03b2 02       		.uleb128 0x2
 1731 03b3 91       		.byte	0x91
 1732 03b4 60       		.sleb128 -32
 1733 03b5 0B       		.uleb128 0xb
 1734 03b6 71010000 		.4byte	.LASF49
 1735 03ba 01       		.byte	0x1
 1736 03bb 1203     		.2byte	0x312
 1737 03bd B0000000 		.4byte	0xb0
 1738 03c1 02       		.uleb128 0x2
 1739 03c2 91       		.byte	0x91
 1740 03c3 6C       		.sleb128 -20
 1741 03c4 00       		.byte	0
 1742 03c5 0E       		.uleb128 0xe
 1743 03c6 29000000 		.4byte	.LASF52
 1744 03ca 01       		.byte	0x1
 1745 03cb 3A03     		.2byte	0x33a
 1746 03cd BB000000 		.4byte	0xbb
 1747 03d1 00000000 		.4byte	.LFB17
 1748 03d5 84000000 		.4byte	.LFE17-.LFB17
 1749 03d9 01       		.uleb128 0x1
 1750 03da 9C       		.byte	0x9c
 1751 03db 0D040000 		.4byte	0x40d
 1752 03df 0A       		.uleb128 0xa
 1753 03e0 84030000 		.4byte	.LASF47
 1754 03e4 01       		.byte	0x1
 1755 03e5 3A03     		.2byte	0x33a
 1756 03e7 A5000000 		.4byte	0xa5
 1757 03eb 02       		.uleb128 0x2
 1758 03ec 91       		.byte	0x91
 1759 03ed 66       		.sleb128 -26
 1760 03ee 0B       		.uleb128 0xb
 1761 03ef C9010000 		.4byte	.LASF53
 1762 03f3 01       		.byte	0x1
 1763 03f4 3C03     		.2byte	0x33c
 1764 03f6 BB000000 		.4byte	0xbb
 1765 03fa 02       		.uleb128 0x2
 1766 03fb 91       		.byte	0x91
 1767 03fc 68       		.sleb128 -24
 1768 03fd 0B       		.uleb128 0xb
 1769 03fe 71010000 		.4byte	.LASF49
 1770 0402 01       		.byte	0x1
 1771 0403 3D03     		.2byte	0x33d
 1772 0405 B0000000 		.4byte	0xb0
 1773 0409 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 47


 1774 040a 91       		.byte	0x91
 1775 040b 6C       		.sleb128 -20
 1776 040c 00       		.byte	0
 1777 040d 13       		.uleb128 0x13
 1778 040e FE010000 		.4byte	.LASF54
 1779 0412 01       		.byte	0x1
 1780 0413 23       		.byte	0x23
 1781 0414 79000000 		.4byte	0x79
 1782 0418 05       		.uleb128 0x5
 1783 0419 03       		.byte	0x3
 1784 041a 00000000 		.4byte	ADC_SAR_0_initVar
 1785 041e 13       		.uleb128 0x13
 1786 041f 1E020000 		.4byte	.LASF55
 1787 0423 01       		.byte	0x1
 1788 0424 24       		.byte	0x24
 1789 0425 2F040000 		.4byte	0x42f
 1790 0429 05       		.uleb128 0x5
 1791 042a 03       		.byte	0x3
 1792 042b 00000000 		.4byte	ADC_SAR_0_offset
 1793 042f 05       		.uleb128 0x5
 1794 0430 A5000000 		.4byte	0xa5
 1795 0434 13       		.uleb128 0x13
 1796 0435 2F030000 		.4byte	.LASF56
 1797 0439 01       		.byte	0x1
 1798 043a 25       		.byte	0x25
 1799 043b 2F040000 		.4byte	0x42f
 1800 043f 05       		.uleb128 0x5
 1801 0440 03       		.byte	0x3
 1802 0441 00000000 		.4byte	ADC_SAR_0_countsPerVolt
 1803 0445 13       		.uleb128 0x13
 1804 0446 50010000 		.4byte	.LASF57
 1805 044a 01       		.byte	0x1
 1806 044b 26       		.byte	0x26
 1807 044c 56040000 		.4byte	0x456
 1808 0450 05       		.uleb128 0x5
 1809 0451 03       		.byte	0x3
 1810 0452 00000000 		.4byte	ADC_SAR_0_countsPer10Volt
 1811 0456 05       		.uleb128 0x5
 1812 0457 B0000000 		.4byte	0xb0
 1813 045b 13       		.uleb128 0x13
 1814 045c EE010000 		.4byte	.LASF58
 1815 0460 01       		.byte	0x1
 1816 0461 27       		.byte	0x27
 1817 0462 2F040000 		.4byte	0x42f
 1818 0466 05       		.uleb128 0x5
 1819 0467 03       		.byte	0x3
 1820 0468 00000000 		.4byte	ADC_SAR_0_shift
 1821 046c 00       		.byte	0
 1822              		.section	.debug_abbrev,"",%progbits
 1823              	.Ldebug_abbrev0:
 1824 0000 01       		.uleb128 0x1
 1825 0001 11       		.uleb128 0x11
 1826 0002 01       		.byte	0x1
 1827 0003 25       		.uleb128 0x25
 1828 0004 0E       		.uleb128 0xe
 1829 0005 13       		.uleb128 0x13
 1830 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 48


 1831 0007 03       		.uleb128 0x3
 1832 0008 0E       		.uleb128 0xe
 1833 0009 1B       		.uleb128 0x1b
 1834 000a 0E       		.uleb128 0xe
 1835 000b 55       		.uleb128 0x55
 1836 000c 17       		.uleb128 0x17
 1837 000d 11       		.uleb128 0x11
 1838 000e 01       		.uleb128 0x1
 1839 000f 10       		.uleb128 0x10
 1840 0010 17       		.uleb128 0x17
 1841 0011 00       		.byte	0
 1842 0012 00       		.byte	0
 1843 0013 02       		.uleb128 0x2
 1844 0014 24       		.uleb128 0x24
 1845 0015 00       		.byte	0
 1846 0016 0B       		.uleb128 0xb
 1847 0017 0B       		.uleb128 0xb
 1848 0018 3E       		.uleb128 0x3e
 1849 0019 0B       		.uleb128 0xb
 1850 001a 03       		.uleb128 0x3
 1851 001b 08       		.uleb128 0x8
 1852 001c 00       		.byte	0
 1853 001d 00       		.byte	0
 1854 001e 03       		.uleb128 0x3
 1855 001f 24       		.uleb128 0x24
 1856 0020 00       		.byte	0
 1857 0021 0B       		.uleb128 0xb
 1858 0022 0B       		.uleb128 0xb
 1859 0023 3E       		.uleb128 0x3e
 1860 0024 0B       		.uleb128 0xb
 1861 0025 03       		.uleb128 0x3
 1862 0026 0E       		.uleb128 0xe
 1863 0027 00       		.byte	0
 1864 0028 00       		.byte	0
 1865 0029 04       		.uleb128 0x4
 1866 002a 16       		.uleb128 0x16
 1867 002b 00       		.byte	0
 1868 002c 03       		.uleb128 0x3
 1869 002d 0E       		.uleb128 0xe
 1870 002e 3A       		.uleb128 0x3a
 1871 002f 0B       		.uleb128 0xb
 1872 0030 3B       		.uleb128 0x3b
 1873 0031 0B       		.uleb128 0xb
 1874 0032 49       		.uleb128 0x49
 1875 0033 13       		.uleb128 0x13
 1876 0034 00       		.byte	0
 1877 0035 00       		.byte	0
 1878 0036 05       		.uleb128 0x5
 1879 0037 35       		.uleb128 0x35
 1880 0038 00       		.byte	0
 1881 0039 49       		.uleb128 0x49
 1882 003a 13       		.uleb128 0x13
 1883 003b 00       		.byte	0
 1884 003c 00       		.byte	0
 1885 003d 06       		.uleb128 0x6
 1886 003e 2E       		.uleb128 0x2e
 1887 003f 00       		.byte	0
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 49


 1888 0040 3F       		.uleb128 0x3f
 1889 0041 19       		.uleb128 0x19
 1890 0042 03       		.uleb128 0x3
 1891 0043 0E       		.uleb128 0xe
 1892 0044 3A       		.uleb128 0x3a
 1893 0045 0B       		.uleb128 0xb
 1894 0046 3B       		.uleb128 0x3b
 1895 0047 0B       		.uleb128 0xb
 1896 0048 27       		.uleb128 0x27
 1897 0049 19       		.uleb128 0x19
 1898 004a 11       		.uleb128 0x11
 1899 004b 01       		.uleb128 0x1
 1900 004c 12       		.uleb128 0x12
 1901 004d 06       		.uleb128 0x6
 1902 004e 40       		.uleb128 0x40
 1903 004f 18       		.uleb128 0x18
 1904 0050 9642     		.uleb128 0x2116
 1905 0052 19       		.uleb128 0x19
 1906 0053 00       		.byte	0
 1907 0054 00       		.byte	0
 1908 0055 07       		.uleb128 0x7
 1909 0056 2E       		.uleb128 0x2e
 1910 0057 01       		.byte	0x1
 1911 0058 3F       		.uleb128 0x3f
 1912 0059 19       		.uleb128 0x19
 1913 005a 03       		.uleb128 0x3
 1914 005b 0E       		.uleb128 0xe
 1915 005c 3A       		.uleb128 0x3a
 1916 005d 0B       		.uleb128 0xb
 1917 005e 3B       		.uleb128 0x3b
 1918 005f 0B       		.uleb128 0xb
 1919 0060 27       		.uleb128 0x27
 1920 0061 19       		.uleb128 0x19
 1921 0062 11       		.uleb128 0x11
 1922 0063 01       		.uleb128 0x1
 1923 0064 12       		.uleb128 0x12
 1924 0065 06       		.uleb128 0x6
 1925 0066 40       		.uleb128 0x40
 1926 0067 18       		.uleb128 0x18
 1927 0068 9642     		.uleb128 0x2116
 1928 006a 19       		.uleb128 0x19
 1929 006b 01       		.uleb128 0x1
 1930 006c 13       		.uleb128 0x13
 1931 006d 00       		.byte	0
 1932 006e 00       		.byte	0
 1933 006f 08       		.uleb128 0x8
 1934 0070 34       		.uleb128 0x34
 1935 0071 00       		.byte	0
 1936 0072 03       		.uleb128 0x3
 1937 0073 0E       		.uleb128 0xe
 1938 0074 3A       		.uleb128 0x3a
 1939 0075 0B       		.uleb128 0xb
 1940 0076 3B       		.uleb128 0x3b
 1941 0077 0B       		.uleb128 0xb
 1942 0078 49       		.uleb128 0x49
 1943 0079 13       		.uleb128 0x13
 1944 007a 02       		.uleb128 0x2
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 50


 1945 007b 18       		.uleb128 0x18
 1946 007c 00       		.byte	0
 1947 007d 00       		.byte	0
 1948 007e 09       		.uleb128 0x9
 1949 007f 2E       		.uleb128 0x2e
 1950 0080 01       		.byte	0x1
 1951 0081 3F       		.uleb128 0x3f
 1952 0082 19       		.uleb128 0x19
 1953 0083 03       		.uleb128 0x3
 1954 0084 0E       		.uleb128 0xe
 1955 0085 3A       		.uleb128 0x3a
 1956 0086 0B       		.uleb128 0xb
 1957 0087 3B       		.uleb128 0x3b
 1958 0088 05       		.uleb128 0x5
 1959 0089 27       		.uleb128 0x27
 1960 008a 19       		.uleb128 0x19
 1961 008b 11       		.uleb128 0x11
 1962 008c 01       		.uleb128 0x1
 1963 008d 12       		.uleb128 0x12
 1964 008e 06       		.uleb128 0x6
 1965 008f 40       		.uleb128 0x40
 1966 0090 18       		.uleb128 0x18
 1967 0091 9742     		.uleb128 0x2117
 1968 0093 19       		.uleb128 0x19
 1969 0094 01       		.uleb128 0x1
 1970 0095 13       		.uleb128 0x13
 1971 0096 00       		.byte	0
 1972 0097 00       		.byte	0
 1973 0098 0A       		.uleb128 0xa
 1974 0099 05       		.uleb128 0x5
 1975 009a 00       		.byte	0
 1976 009b 03       		.uleb128 0x3
 1977 009c 0E       		.uleb128 0xe
 1978 009d 3A       		.uleb128 0x3a
 1979 009e 0B       		.uleb128 0xb
 1980 009f 3B       		.uleb128 0x3b
 1981 00a0 05       		.uleb128 0x5
 1982 00a1 49       		.uleb128 0x49
 1983 00a2 13       		.uleb128 0x13
 1984 00a3 02       		.uleb128 0x2
 1985 00a4 18       		.uleb128 0x18
 1986 00a5 00       		.byte	0
 1987 00a6 00       		.byte	0
 1988 00a7 0B       		.uleb128 0xb
 1989 00a8 34       		.uleb128 0x34
 1990 00a9 00       		.byte	0
 1991 00aa 03       		.uleb128 0x3
 1992 00ab 0E       		.uleb128 0xe
 1993 00ac 3A       		.uleb128 0x3a
 1994 00ad 0B       		.uleb128 0xb
 1995 00ae 3B       		.uleb128 0x3b
 1996 00af 05       		.uleb128 0x5
 1997 00b0 49       		.uleb128 0x49
 1998 00b1 13       		.uleb128 0x13
 1999 00b2 02       		.uleb128 0x2
 2000 00b3 18       		.uleb128 0x18
 2001 00b4 00       		.byte	0
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 51


 2002 00b5 00       		.byte	0
 2003 00b6 0C       		.uleb128 0xc
 2004 00b7 2E       		.uleb128 0x2e
 2005 00b8 01       		.byte	0x1
 2006 00b9 3F       		.uleb128 0x3f
 2007 00ba 19       		.uleb128 0x19
 2008 00bb 03       		.uleb128 0x3
 2009 00bc 0E       		.uleb128 0xe
 2010 00bd 3A       		.uleb128 0x3a
 2011 00be 0B       		.uleb128 0xb
 2012 00bf 3B       		.uleb128 0x3b
 2013 00c0 05       		.uleb128 0x5
 2014 00c1 27       		.uleb128 0x27
 2015 00c2 19       		.uleb128 0x19
 2016 00c3 11       		.uleb128 0x11
 2017 00c4 01       		.uleb128 0x1
 2018 00c5 12       		.uleb128 0x12
 2019 00c6 06       		.uleb128 0x6
 2020 00c7 40       		.uleb128 0x40
 2021 00c8 18       		.uleb128 0x18
 2022 00c9 9642     		.uleb128 0x2116
 2023 00cb 19       		.uleb128 0x19
 2024 00cc 01       		.uleb128 0x1
 2025 00cd 13       		.uleb128 0x13
 2026 00ce 00       		.byte	0
 2027 00cf 00       		.byte	0
 2028 00d0 0D       		.uleb128 0xd
 2029 00d1 2E       		.uleb128 0x2e
 2030 00d2 00       		.byte	0
 2031 00d3 3F       		.uleb128 0x3f
 2032 00d4 19       		.uleb128 0x19
 2033 00d5 03       		.uleb128 0x3
 2034 00d6 0E       		.uleb128 0xe
 2035 00d7 3A       		.uleb128 0x3a
 2036 00d8 0B       		.uleb128 0xb
 2037 00d9 3B       		.uleb128 0x3b
 2038 00da 05       		.uleb128 0x5
 2039 00db 27       		.uleb128 0x27
 2040 00dc 19       		.uleb128 0x19
 2041 00dd 11       		.uleb128 0x11
 2042 00de 01       		.uleb128 0x1
 2043 00df 12       		.uleb128 0x12
 2044 00e0 06       		.uleb128 0x6
 2045 00e1 40       		.uleb128 0x40
 2046 00e2 18       		.uleb128 0x18
 2047 00e3 9742     		.uleb128 0x2117
 2048 00e5 19       		.uleb128 0x19
 2049 00e6 00       		.byte	0
 2050 00e7 00       		.byte	0
 2051 00e8 0E       		.uleb128 0xe
 2052 00e9 2E       		.uleb128 0x2e
 2053 00ea 01       		.byte	0x1
 2054 00eb 3F       		.uleb128 0x3f
 2055 00ec 19       		.uleb128 0x19
 2056 00ed 03       		.uleb128 0x3
 2057 00ee 0E       		.uleb128 0xe
 2058 00ef 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 52


 2059 00f0 0B       		.uleb128 0xb
 2060 00f1 3B       		.uleb128 0x3b
 2061 00f2 05       		.uleb128 0x5
 2062 00f3 27       		.uleb128 0x27
 2063 00f4 19       		.uleb128 0x19
 2064 00f5 49       		.uleb128 0x49
 2065 00f6 13       		.uleb128 0x13
 2066 00f7 11       		.uleb128 0x11
 2067 00f8 01       		.uleb128 0x1
 2068 00f9 12       		.uleb128 0x12
 2069 00fa 06       		.uleb128 0x6
 2070 00fb 40       		.uleb128 0x40
 2071 00fc 18       		.uleb128 0x18
 2072 00fd 9642     		.uleb128 0x2116
 2073 00ff 19       		.uleb128 0x19
 2074 0100 01       		.uleb128 0x1
 2075 0101 13       		.uleb128 0x13
 2076 0102 00       		.byte	0
 2077 0103 00       		.byte	0
 2078 0104 0F       		.uleb128 0xf
 2079 0105 2E       		.uleb128 0x2e
 2080 0106 00       		.byte	0
 2081 0107 3F       		.uleb128 0x3f
 2082 0108 19       		.uleb128 0x19
 2083 0109 03       		.uleb128 0x3
 2084 010a 0E       		.uleb128 0xe
 2085 010b 3A       		.uleb128 0x3a
 2086 010c 0B       		.uleb128 0xb
 2087 010d 3B       		.uleb128 0x3b
 2088 010e 05       		.uleb128 0x5
 2089 010f 27       		.uleb128 0x27
 2090 0110 19       		.uleb128 0x19
 2091 0111 49       		.uleb128 0x49
 2092 0112 13       		.uleb128 0x13
 2093 0113 11       		.uleb128 0x11
 2094 0114 01       		.uleb128 0x1
 2095 0115 12       		.uleb128 0x12
 2096 0116 06       		.uleb128 0x6
 2097 0117 40       		.uleb128 0x40
 2098 0118 18       		.uleb128 0x18
 2099 0119 9742     		.uleb128 0x2117
 2100 011b 19       		.uleb128 0x19
 2101 011c 00       		.byte	0
 2102 011d 00       		.byte	0
 2103 011e 10       		.uleb128 0x10
 2104 011f 2E       		.uleb128 0x2e
 2105 0120 01       		.byte	0x1
 2106 0121 3F       		.uleb128 0x3f
 2107 0122 19       		.uleb128 0x19
 2108 0123 03       		.uleb128 0x3
 2109 0124 0E       		.uleb128 0xe
 2110 0125 3A       		.uleb128 0x3a
 2111 0126 0B       		.uleb128 0xb
 2112 0127 3B       		.uleb128 0x3b
 2113 0128 05       		.uleb128 0x5
 2114 0129 27       		.uleb128 0x27
 2115 012a 19       		.uleb128 0x19
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 53


 2116 012b 49       		.uleb128 0x49
 2117 012c 13       		.uleb128 0x13
 2118 012d 11       		.uleb128 0x11
 2119 012e 01       		.uleb128 0x1
 2120 012f 12       		.uleb128 0x12
 2121 0130 06       		.uleb128 0x6
 2122 0131 40       		.uleb128 0x40
 2123 0132 18       		.uleb128 0x18
 2124 0133 9742     		.uleb128 0x2117
 2125 0135 19       		.uleb128 0x19
 2126 0136 01       		.uleb128 0x1
 2127 0137 13       		.uleb128 0x13
 2128 0138 00       		.byte	0
 2129 0139 00       		.byte	0
 2130 013a 11       		.uleb128 0x11
 2131 013b 34       		.uleb128 0x34
 2132 013c 00       		.byte	0
 2133 013d 03       		.uleb128 0x3
 2134 013e 08       		.uleb128 0x8
 2135 013f 3A       		.uleb128 0x3a
 2136 0140 0B       		.uleb128 0xb
 2137 0141 3B       		.uleb128 0x3b
 2138 0142 05       		.uleb128 0x5
 2139 0143 49       		.uleb128 0x49
 2140 0144 13       		.uleb128 0x13
 2141 0145 02       		.uleb128 0x2
 2142 0146 18       		.uleb128 0x18
 2143 0147 00       		.byte	0
 2144 0148 00       		.byte	0
 2145 0149 12       		.uleb128 0x12
 2146 014a 2E       		.uleb128 0x2e
 2147 014b 01       		.byte	0x1
 2148 014c 03       		.uleb128 0x3
 2149 014d 0E       		.uleb128 0xe
 2150 014e 3A       		.uleb128 0x3a
 2151 014f 0B       		.uleb128 0xb
 2152 0150 3B       		.uleb128 0x3b
 2153 0151 05       		.uleb128 0x5
 2154 0152 27       		.uleb128 0x27
 2155 0153 19       		.uleb128 0x19
 2156 0154 11       		.uleb128 0x11
 2157 0155 01       		.uleb128 0x1
 2158 0156 12       		.uleb128 0x12
 2159 0157 06       		.uleb128 0x6
 2160 0158 40       		.uleb128 0x40
 2161 0159 18       		.uleb128 0x18
 2162 015a 9642     		.uleb128 0x2116
 2163 015c 19       		.uleb128 0x19
 2164 015d 01       		.uleb128 0x1
 2165 015e 13       		.uleb128 0x13
 2166 015f 00       		.byte	0
 2167 0160 00       		.byte	0
 2168 0161 13       		.uleb128 0x13
 2169 0162 34       		.uleb128 0x34
 2170 0163 00       		.byte	0
 2171 0164 03       		.uleb128 0x3
 2172 0165 0E       		.uleb128 0xe
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 54


 2173 0166 3A       		.uleb128 0x3a
 2174 0167 0B       		.uleb128 0xb
 2175 0168 3B       		.uleb128 0x3b
 2176 0169 0B       		.uleb128 0xb
 2177 016a 49       		.uleb128 0x49
 2178 016b 13       		.uleb128 0x13
 2179 016c 3F       		.uleb128 0x3f
 2180 016d 19       		.uleb128 0x19
 2181 016e 02       		.uleb128 0x2
 2182 016f 18       		.uleb128 0x18
 2183 0170 00       		.byte	0
 2184 0171 00       		.byte	0
 2185 0172 00       		.byte	0
 2186              		.section	.debug_aranges,"",%progbits
 2187 0000 A4000000 		.4byte	0xa4
 2188 0004 0200     		.2byte	0x2
 2189 0006 00000000 		.4byte	.Ldebug_info0
 2190 000a 04       		.byte	0x4
 2191 000b 00       		.byte	0
 2192 000c 0000     		.2byte	0
 2193 000e 0000     		.2byte	0
 2194 0010 00000000 		.4byte	.LFB0
 2195 0014 20000000 		.4byte	.LFE0-.LFB0
 2196 0018 00000000 		.4byte	.LFB1
 2197 001c 44000000 		.4byte	.LFE1-.LFB1
 2198 0020 00000000 		.4byte	.LFB2
 2199 0024 F4000000 		.4byte	.LFE2-.LFB2
 2200 0028 00000000 		.4byte	.LFB3
 2201 002c 80000000 		.4byte	.LFE3-.LFB3
 2202 0030 00000000 		.4byte	.LFB4
 2203 0034 40000000 		.4byte	.LFE4-.LFB4
 2204 0038 00000000 		.4byte	.LFB5
 2205 003c 50000000 		.4byte	.LFE5-.LFB5
 2206 0040 00000000 		.4byte	.LFB6
 2207 0044 20000000 		.4byte	.LFE6-.LFB6
 2208 0048 00000000 		.4byte	.LFB7
 2209 004c 20000000 		.4byte	.LFE7-.LFB7
 2210 0050 00000000 		.4byte	.LFB8
 2211 0054 40000000 		.4byte	.LFE8-.LFB8
 2212 0058 00000000 		.4byte	.LFB9
 2213 005c 2C000000 		.4byte	.LFE9-.LFB9
 2214 0060 00000000 		.4byte	.LFB10
 2215 0064 34000000 		.4byte	.LFE10-.LFB10
 2216 0068 00000000 		.4byte	.LFB11
 2217 006c 20000000 		.4byte	.LFE11-.LFB11
 2218 0070 00000000 		.4byte	.LFB12
 2219 0074 80000000 		.4byte	.LFE12-.LFB12
 2220 0078 00000000 		.4byte	.LFB13
 2221 007c 2C000000 		.4byte	.LFE13-.LFB13
 2222 0080 00000000 		.4byte	.LFB14
 2223 0084 1C000000 		.4byte	.LFE14-.LFB14
 2224 0088 00000000 		.4byte	.LFB15
 2225 008c 8C000000 		.4byte	.LFE15-.LFB15
 2226 0090 00000000 		.4byte	.LFB16
 2227 0094 94000000 		.4byte	.LFE16-.LFB16
 2228 0098 00000000 		.4byte	.LFB17
 2229 009c 84000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 55


 2230 00a0 00000000 		.4byte	0
 2231 00a4 00000000 		.4byte	0
 2232              		.section	.debug_ranges,"",%progbits
 2233              	.Ldebug_ranges0:
 2234 0000 00000000 		.4byte	.LFB0
 2235 0004 20000000 		.4byte	.LFE0
 2236 0008 00000000 		.4byte	.LFB1
 2237 000c 44000000 		.4byte	.LFE1
 2238 0010 00000000 		.4byte	.LFB2
 2239 0014 F4000000 		.4byte	.LFE2
 2240 0018 00000000 		.4byte	.LFB3
 2241 001c 80000000 		.4byte	.LFE3
 2242 0020 00000000 		.4byte	.LFB4
 2243 0024 40000000 		.4byte	.LFE4
 2244 0028 00000000 		.4byte	.LFB5
 2245 002c 50000000 		.4byte	.LFE5
 2246 0030 00000000 		.4byte	.LFB6
 2247 0034 20000000 		.4byte	.LFE6
 2248 0038 00000000 		.4byte	.LFB7
 2249 003c 20000000 		.4byte	.LFE7
 2250 0040 00000000 		.4byte	.LFB8
 2251 0044 40000000 		.4byte	.LFE8
 2252 0048 00000000 		.4byte	.LFB9
 2253 004c 2C000000 		.4byte	.LFE9
 2254 0050 00000000 		.4byte	.LFB10
 2255 0054 34000000 		.4byte	.LFE10
 2256 0058 00000000 		.4byte	.LFB11
 2257 005c 20000000 		.4byte	.LFE11
 2258 0060 00000000 		.4byte	.LFB12
 2259 0064 80000000 		.4byte	.LFE12
 2260 0068 00000000 		.4byte	.LFB13
 2261 006c 2C000000 		.4byte	.LFE13
 2262 0070 00000000 		.4byte	.LFB14
 2263 0074 1C000000 		.4byte	.LFE14
 2264 0078 00000000 		.4byte	.LFB15
 2265 007c 8C000000 		.4byte	.LFE15
 2266 0080 00000000 		.4byte	.LFB16
 2267 0084 94000000 		.4byte	.LFE16
 2268 0088 00000000 		.4byte	.LFB17
 2269 008c 84000000 		.4byte	.LFE17
 2270 0090 00000000 		.4byte	0
 2271 0094 00000000 		.4byte	0
 2272              		.section	.debug_line,"",%progbits
 2273              	.Ldebug_line0:
 2274 0000 09020000 		.section	.debug_str,"MS",%progbits,1
 2274      02004800 
 2274      00000201 
 2274      FB0E0D00 
 2274      01010101 
 2275              	.LASF12:
 2276 0000 75696E74 		.ascii	"uint16\000"
 2276      313600
 2277              	.LASF44:
 2278 0007 61646347 		.ascii	"adcGain\000"
 2278      61696E00 
 2279              	.LASF42:
 2280 000f 636F756E 		.ascii	"counts\000"
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 56


 2280      747300
 2281              	.LASF63:
 2282 0016 4144435F 		.ascii	"ADC_SAR_0_CalcGain\000"
 2282      5341525F 
 2282      305F4361 
 2282      6C634761 
 2282      696E00
 2283              	.LASF52:
 2284 0029 4144435F 		.ascii	"ADC_SAR_0_CountsTo_Volts\000"
 2284      5341525F 
 2284      305F436F 
 2284      756E7473 
 2284      546F5F56 
 2285              	.LASF31:
 2286 0042 4144435F 		.ascii	"ADC_SAR_0_SetResolution\000"
 2286      5341525F 
 2286      305F5365 
 2286      74526573 
 2286      6F6C7574 
 2287              	.LASF24:
 2288 005a 4144435F 		.ascii	"ADC_SAR_0_Start\000"
 2288      5341525F 
 2288      305F5374 
 2288      61727400 
 2289              	.LASF8:
 2290 006a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2290      206C6F6E 
 2290      6720756E 
 2290      7369676E 
 2290      65642069 
 2291              	.LASF34:
 2292 0081 4144435F 		.ascii	"ADC_SAR_0_StartConvert\000"
 2292      5341525F 
 2292      305F5374 
 2292      61727443 
 2292      6F6E7665 
 2293              	.LASF61:
 2294 0098 473A5C44 		.ascii	"G:\\Documentos\\PSoC Creator\\CE95358.cydsn\000"
 2294      6F63756D 
 2294      656E746F 
 2294      735C5053 
 2294      6F432043 
 2295              	.LASF7:
 2296 00c1 6C6F6E67 		.ascii	"long long int\000"
 2296      206C6F6E 
 2296      6720696E 
 2296      7400
 2297              	.LASF1:
 2298 00cf 7369676E 		.ascii	"signed char\000"
 2298      65642063 
 2298      68617200 
 2299              	.LASF39:
 2300 00db 4144435F 		.ascii	"ADC_SAR_0_GetResult16\000"
 2300      5341525F 
 2300      305F4765 
 2300      74526573 
 2300      756C7431 
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 57


 2301              	.LASF16:
 2302 00f1 696E7433 		.ascii	"int32\000"
 2302      3200
 2303              	.LASF5:
 2304 00f7 6C6F6E67 		.ascii	"long int\000"
 2304      20696E74 
 2304      00
 2305              	.LASF45:
 2306 0100 4144435F 		.ascii	"ADC_SAR_0_SetScaledGain\000"
 2306      5341525F 
 2306      305F5365 
 2306      74536361 
 2306      6C656447 
 2307              	.LASF22:
 2308 0118 72656731 		.ascii	"reg16\000"
 2308      3600
 2309              	.LASF11:
 2310 011e 75696E74 		.ascii	"uint8\000"
 2310      3800
 2311              	.LASF19:
 2312 0124 646F7562 		.ascii	"double\000"
 2312      6C6500
 2313              	.LASF60:
 2314 012b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_0.c\000"
 2314      6E657261 
 2314      7465645F 
 2314      536F7572 
 2314      63655C50 
 2315              	.LASF57:
 2316 0150 4144435F 		.ascii	"ADC_SAR_0_countsPer10Volt\000"
 2316      5341525F 
 2316      305F636F 
 2316      756E7473 
 2316      50657231 
 2317              	.LASF13:
 2318 016a 75696E74 		.ascii	"uint32\000"
 2318      333200
 2319              	.LASF49:
 2320 0171 636F756E 		.ascii	"countsPer10Volt\000"
 2320      74735065 
 2320      72313056 
 2320      6F6C7400 
 2321              	.LASF36:
 2322 0181 7265744D 		.ascii	"retMode\000"
 2322      6F646500 
 2323              	.LASF50:
 2324 0189 4144435F 		.ascii	"ADC_SAR_0_CountsTo_uVolts\000"
 2324      5341525F 
 2324      305F436F 
 2324      756E7473 
 2324      546F5F75 
 2325              	.LASF0:
 2326 01a3 756E7369 		.ascii	"unsigned int\000"
 2326      676E6564 
 2326      20696E74 
 2326      00
 2327              	.LASF51:
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 58


 2328 01b0 75566F6C 		.ascii	"uVolts\000"
 2328      747300
 2329              	.LASF6:
 2330 01b7 6C6F6E67 		.ascii	"long unsigned int\000"
 2330      20756E73 
 2330      69676E65 
 2330      6420696E 
 2330      7400
 2331              	.LASF53:
 2332 01c9 766F6C74 		.ascii	"volts\000"
 2332      7300
 2333              	.LASF4:
 2334 01cf 73686F72 		.ascii	"short unsigned int\000"
 2334      7420756E 
 2334      7369676E 
 2334      65642069 
 2334      6E7400
 2335              	.LASF14:
 2336 01e2 696E7438 		.ascii	"int8\000"
 2336      00
 2337              	.LASF48:
 2338 01e7 6D566F6C 		.ascii	"mVolts\000"
 2338      747300
 2339              	.LASF58:
 2340 01ee 4144435F 		.ascii	"ADC_SAR_0_shift\000"
 2340      5341525F 
 2340      305F7368 
 2340      69667400 
 2341              	.LASF54:
 2342 01fe 4144435F 		.ascii	"ADC_SAR_0_initVar\000"
 2342      5341525F 
 2342      305F696E 
 2342      69745661 
 2342      7200
 2343              	.LASF23:
 2344 0210 72656733 		.ascii	"reg32\000"
 2344      3200
 2345              	.LASF17:
 2346 0216 666C6F61 		.ascii	"float32\000"
 2346      74333200 
 2347              	.LASF55:
 2348 021e 4144435F 		.ascii	"ADC_SAR_0_offset\000"
 2348      5341525F 
 2348      305F6F66 
 2348      66736574 
 2348      00
 2349              	.LASF9:
 2350 022f 73697A65 		.ascii	"sizetype\000"
 2350      74797065 
 2350      00
 2351              	.LASF59:
 2352 0238 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2352      4320342E 
 2352      392E3320 
 2352      32303135 
 2352      30333033 
 2353 026b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 59


 2353      20726576 
 2353      6973696F 
 2353      6E203232 
 2353      31323230 
 2354 029e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2354      66756E63 
 2354      74696F6E 
 2354      2D736563 
 2354      74696F6E 
 2355              	.LASF29:
 2356 02c6 4144435F 		.ascii	"ADC_SAR_0_Stop\000"
 2356      5341525F 
 2356      305F5374 
 2356      6F7000
 2357              	.LASF20:
 2358 02d5 696E7436 		.ascii	"int64\000"
 2358      3400
 2359              	.LASF35:
 2360 02db 4144435F 		.ascii	"ADC_SAR_0_StopConvert\000"
 2360      5341525F 
 2360      305F5374 
 2360      6F70436F 
 2360      6E766572 
 2361              	.LASF18:
 2362 02f1 666C6F61 		.ascii	"float\000"
 2362      7400
 2363              	.LASF32:
 2364 02f7 706F7765 		.ascii	"power\000"
 2364      7200
 2365              	.LASF21:
 2366 02fd 72656738 		.ascii	"reg8\000"
 2366      00
 2367              	.LASF2:
 2368 0302 756E7369 		.ascii	"unsigned char\000"
 2368      676E6564 
 2368      20636861 
 2368      7200
 2369              	.LASF62:
 2370 0310 4144435F 		.ascii	"ADC_SAR_0_GetResult8\000"
 2370      5341525F 
 2370      305F4765 
 2370      74526573 
 2370      756C7438 
 2371              	.LASF3:
 2372 0325 73686F72 		.ascii	"short int\000"
 2372      7420696E 
 2372      7400
 2373              	.LASF56:
 2374 032f 4144435F 		.ascii	"ADC_SAR_0_countsPerVolt\000"
 2374      5341525F 
 2374      305F636F 
 2374      756E7473 
 2374      50657256 
 2375              	.LASF33:
 2376 0347 7265736F 		.ascii	"resolution\000"
 2376      6C757469 
 2376      6F6E00
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 60


 2377              	.LASF10:
 2378 0352 63686172 		.ascii	"char\000"
 2378      00
 2379              	.LASF41:
 2380 0357 6F666673 		.ascii	"offset\000"
 2380      657400
 2381              	.LASF43:
 2382 035e 4144435F 		.ascii	"ADC_SAR_0_SetGain\000"
 2382      5341525F 
 2382      305F5365 
 2382      74476169 
 2382      6E00
 2383              	.LASF40:
 2384 0370 4144435F 		.ascii	"ADC_SAR_0_SetOffset\000"
 2384      5341525F 
 2384      305F5365 
 2384      744F6666 
 2384      73657400 
 2385              	.LASF47:
 2386 0384 61646343 		.ascii	"adcCounts\000"
 2386      6F756E74 
 2386      7300
 2387              	.LASF27:
 2388 038e 656E6162 		.ascii	"enableInterrupts\000"
 2388      6C65496E 
 2388      74657272 
 2388      75707473 
 2388      00
 2389              	.LASF37:
 2390 039f 73746174 		.ascii	"status\000"
 2390      757300
 2391              	.LASF30:
 2392 03a6 4144435F 		.ascii	"ADC_SAR_0_SetPower\000"
 2392      5341525F 
 2392      305F5365 
 2392      74506F77 
 2392      657200
 2393              	.LASF38:
 2394 03b9 4144435F 		.ascii	"ADC_SAR_0_IsEndConversion\000"
 2394      5341525F 
 2394      305F4973 
 2394      456E6443 
 2394      6F6E7665 
 2395              	.LASF15:
 2396 03d3 696E7431 		.ascii	"int16\000"
 2396      3600
 2397              	.LASF26:
 2398 03d9 746D7052 		.ascii	"tmpReg\000"
 2398      656700
 2399              	.LASF25:
 2400 03e0 4144435F 		.ascii	"ADC_SAR_0_Init\000"
 2400      5341525F 
 2400      305F496E 
 2400      697400
 2401              	.LASF46:
 2402 03ef 4144435F 		.ascii	"ADC_SAR_0_CountsTo_mVolts\000"
 2402      5341525F 
ARM GAS  C:\Users\Rolando\AppData\Local\Temp\cctyPoav.s 			page 61


 2402      305F436F 
 2402      756E7473 
 2402      546F5F6D 
 2403              	.LASF28:
 2404 0409 4144435F 		.ascii	"ADC_SAR_0_Enable\000"
 2404      5341525F 
 2404      305F456E 
 2404      61626C65 
 2404      00
 2405              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
